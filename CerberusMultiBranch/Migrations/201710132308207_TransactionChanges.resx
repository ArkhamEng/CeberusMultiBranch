<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Target" xml:space="preserve">
    <value>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</value>
  </data>
  <data name="DefaultSchema" xml:space="preserve">
    <value>Security</value>
  </data>
</root>