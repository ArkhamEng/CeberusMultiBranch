@model CerberusMultiBranch.Models.Entities.Operative.CashRegister

@{
    ViewBag.Title = "Detalle de caja";
}
<h3>
    <button type="button" class="btn btn-default" title="volver al Historial de caja"
            onclick="ShowLoading(); window.location='@Url.Action("History")'">
        <span class="fa fa-arrow-left"></span>
    </button>
    
    Detalle de caja sucursal <label class="text-lowercase">@Model.Branch.Name</label>
</h3>

<div class="panel-group">
    <div class="col-md-12">
        <div class="panel panel-danger">
           
            <div class="panel-body">
                <div class="col-md-3">
                    @Html.LabelFor(model => model.OpeningDate, htmlAttributes: new { @class = "control-label" })
                    <div class="input-group">
                        <span class="input-group-addon"><i class="fa fa-calendar-check-o"></i></span>
                        @Html.EditorFor(model => model.OpeningDate, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                    </div>
                </div>

                <div class="col-md-4 col-md-offset-1">
                    @Html.LabelFor(model => model.UserOpen, htmlAttributes: new { @class = "control-label" })
                    <div class="input-group">
                        <span class="input-group-addon"><i class="fa fa-briefcase"></i></span>
                        @Html.EditorFor(model => model.UserOpen, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                    </div>
                </div>

                <div class="col-md-2 col-md-offset-1">
                    @Html.LabelFor(model => model.InitialAmount, htmlAttributes: new { @class = "control-label" })
                    <div class="input-group">
                        <span class="input-group-addon"><i class="fa fa-dollar"></i></span>
                        @Html.EditorFor(model => model.InitialAmount, new { htmlAttributes = new { @class = "form-control", @readonly = "true", type = "currency" } })
                    </div>
                </div>

                <div class="col-md-3">
                    @Html.LabelFor(model => model.ClosingDate, htmlAttributes: new { @class = "control-label" })
                    <div class="input-group">
                        <span class="input-group-addon"><i class="fa fa-calendar-times-o"></i></span>
                        @Html.EditorFor(model => model.ClosingDate, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                    </div>
                </div>

                <div class="col-md-4 col-md-offset-1">
                    @Html.LabelFor(model => model.UserClose, htmlAttributes: new { @class = "control-label" })
                    <div class="input-group">
                        <span class="input-group-addon"><i class="fa fa-briefcase"></i></span>
                        @Html.EditorFor(model => model.UserClose, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                    </div>
                </div>

                <div class="col-md-2 col-md-offset-1">
                    @Html.LabelFor(model => model.FinalAmount, htmlAttributes: new { @class = "control-label" })
                    <div class="input-group">
                        <span class="input-group-addon"><i class="fa fa-dollar"></i></span>
                        @Html.EditorFor(model => model.FinalAmount, new { htmlAttributes = new { @class = "form-control", @readonly = "true", type = "currency" } })
                    </div>
                </div>

                <div class="col-md-8">
                    @Html.LabelFor(model => model.CloseComment, htmlAttributes: new { @class = "control-label" })
                    <div class="input-group">
                        <span class="input-group-addon"><i class="fa fa-comments"></i></span>
                        @Html.EditorFor(model => model.CloseComment, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                    </div>
                </div>

            </div>
        </div>
    </div>

    <div class="col-md-6">
        <div class="panel panel-success">
            <div class="panel-heading">
                <div class="panel-title">
                    <span class="fa fa-money" style="float:left"></span>
                    &nbsp;&nbsp;Ingresos
                </div>
            </div>
            <div class="panel-body">
                <table id="tdIncomes" class="table table-striped">
                    <thead>
                        <tr>
                            <th>@Html.DisplayNameFor(m => m.Incomes.First().Amount)</th>
                            <th>@Html.DisplayNameFor(m => m.Incomes.First().InsDate)</th>
                            <th>@Html.DisplayName("Venta")</th>
                            <th>@Html.DisplayName("T. pago")</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.Incomes)
                        {
                            <tr>
                                <td>@Html.DisplayFor(m => item.Amount)</td>
                                <td>@Html.DisplayFor(m => item.InsDate)</td>
                                <td>@Html.DisplayFor(m => item.SaleFolio)</td>
                                <td>@Html.DisplayFor(m => item.Type)</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <div class="col-md-6">
        <div class="panel panel-danger">
            <div class="panel-heading">
                <div class="panel-title">
                    <span class="fa fa-minus-circle" style="float:left"></span>
                    &nbsp;&nbsp;Retiros
                </div>
            </div>
            <div class="panel-body">
                <table id="tdWithdrawals" class="table table-striped">
                    <thead>
                        <tr>
                            <th>@Html.DisplayNameFor(m=> m.Withdrawals.First().Amount)</th>
                            <th>@Html.DisplayNameFor(m => m.Withdrawals.First().InsDate)</th>
                            <th>@Html.DisplayNameFor(m => m.Withdrawals.First().Cause.Name)</th>
                            <th>@Html.DisplayNameFor(m => m.Withdrawals.First().Comment)</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.Withdrawals)
                    {
                            <tr>
                                <td>@Html.DisplayFor(m=> item.Amount)</td>
                                <td>@Html.DisplayFor(m => item.InsDate)</td>
                                <td>@Html.DisplayFor(m => item.Cause.Name)</td>
                                <td>@Html.DisplayFor(m => item.Comment)</td>
                            </tr>
                    }
                    </tbody>
                </table>
            </div>
        </div>
    </div>

  
</div>

<script>
    $(document).ready(function ()
    {
        Paginate("#tdWithdrawals", 10)
        Paginate("#tdIncomes", 10)
    });
</script>