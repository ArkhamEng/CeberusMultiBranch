@model CerberusMultiBranch.Models.Entities.Operative.CashRegister
@using CerberusMultiBranch.Support
@{
    ViewBag.Title = "Caja";
    ViewBag.Class = "fa fa-laptop";
}

@if (!Model.IsOpen)
{
    <div class="col-md-12 panel-danger">
        <h4 class="text-uppercase text-center panel-heading">
            @Model.OpeningDate.ToString("dddd dd MMMM yyyy")
        </h4>
    </div>

    <div class="col-md-12">
        <div class="btn-group-vertical text-center col-md-4  col-md-push-4">
            <label class="control-label">
                Monto Inicial
            </label>
            <input id="txtInitialAmount" class="form-control" type="number" />

            <button id="btnStart" class="btn-danger btn" type="button" onclick="OpenCashRegister()">
                <span class="glyphicon glyphicon-log-out"></span>
                Abrir Caja
            </button>
        </div>
    </div>
}
else
{ <br />
    <div class="col-md-12">
        <div class="panel panel-success">
            <div class="panel-heading">
                <h4 class="text-uppercase text-center panel-title">
                    <a data-toggle="collapse" href="#collapse1">
                    @Model.OpeningDate.ToString("dddd dd MMMM yyyy")  monto de apertura @Model.InitialAmount.ToMoney()</a>
                </h4>
            </div>
            <div id="collapse1" class="panel-collapse collapse">
                <div class="panel-body">
                    <div class="col-md-5  text-center  alert bg-primary">
                        <h3>
                            @{
                                var cash = Model.Incomes.Where(d => d.Type == CerberusMultiBranch.Models.Entities.Operative.PaymentMethod.Efectivo).Sum(d => d.Amount).ToMoney();
                            }
                            Ventas Efectivo<br />
                            @cash
                        </h3>
                    </div>
                    <div class="col-md-5 col-md-offset-1 text-center  alert alert-warning">
                        <h3>
                            Ventas Tarjeta<br />
                            @Model.Incomes.Where(d => d.Type == CerberusMultiBranch.Models.Entities.Operative.PaymentMethod.Tarjeta).Sum(d => d.Amount).ToMoney()
                        </h3>
                    </div>

                    <div class="col-md-11">
                        <img class="img-responsive" src="@Model.ChartSource" />
                    </div>
                </div>
            </div>

        </div>
     
    </div>

    <div class="col-md-3">
        <div class="col-md-12  btn btn-info alert text-center" onclick="OpenNotes()" title="Buscar notas">
            <h3>
                Anticipos <br />
                y comprobantes
            </h3>
        </div>

        @if (User.IsInRole("Cajero"))
        {
            <div class="text-center col-md-12 alert btn-danger" onclick="OpenWithdrawal()"
                 onmouseover="SetPointer(this)" title="Ver y agregar retiros">
                <h3>
                    Retiros<br />
                    @Model.Withdrawals.Sum(w => w.Amount).ToMoney()
                </h3>
            </div>
        }
        else
        {
            <div class="text-center col-md-12 alert btn-danger disabled">
                <h3>
                    Retiros<br />
                    @Model.Withdrawals.Sum(w => w.Amount).ToMoney()
                </h3>
            </div>
        }

        <div class="text-center col-md-12  alert  btn-warning" onmouseover="SetPointer(this)" id="btnTerminate" title="Cerrar caja" >
            <h3>
                <span class="fa fa-power-off"></span>
                Cierre de Caja<br />
            </h3>
        </div>
    </div>

    @Html.Partial("_Cancelation")

    <div id="divPending" class="col-md-9">
    </div>
    <div id="divRefunding" class="col-md-9">
    </div>

    <div id="divDetails">
    </div>
    <div id="Close">

    </div>
     
    <div id="divPrinter"></div>

     <div id="divNotes">
     </div>
}

<script>
    var selectedId = 0;
    $(document).ready(function ()
    {
        CheckPendingPayments();
        CheckRefunding();

        setInterval(function ()
        {
            CheckPendingPayments();
            CheckRefunding();
        }, 10000);

      

        $("#btnTerminate").click(function ()
        {
            ShowLoading();
            ExecuteAjax('@Url.Action("BeginClose")', {}, function (response)
            {
                HideLoading();

                $("#Close").html(response);

                $("#ModalCloseCash").modal("show");
            });
        });
    });


    function ShowPaymentModal(id)
    {
        ShowLoading();
        ExecuteAjax('@Url.Action("BeginRegistPayment")', { id: id }, function (response) {
            HideLoading();

            if ($.isPlainObject(response))
                ShowMessage(response.Result, response.Message, 'warning', true);
            else
                $("#divDetails").html(response);
        });
    }

    function ShowRefundmentModal(id)
    {
        ShowLoading();
        ExecuteAjax('@Url.Action("BeginRefund")', { saleID: id }, function (response)
        {
            HideLoading();

            if ($.isPlainObject(response))
                ShowMessage(response.Result, response.Message, 'warning', true);
            else
                $("#divDetails").html(response);
        });
    }


    function OpenNotes()
    {
        ShowLoading();
        ExecuteAjax('@Url.Action("TicketsAndNotes")', {}, function (response)
        {
            HideLoading();
            $("#divNotes").html(response);
        });
    }

    function OpenWithdrawal()
    {
        ShowLoading();
        $("#hTitle").text("Detalle de retiros");

        ExecuteAjax('@Url.Action("GetWithdrawals", "CashRegister")', {}, function (view)
        {
            HideLoading();
            $("#divDetails").html(view);
        });
    }

    function OpenCashRegister()
    {
        ShowLoading();

        ExecuteAjax('@Url.Action("OpenCashRegister","CashRegister")', { initialAmount: $("#txtInitialAmount").val() }, function (data) {
            HideLoading();

            if (data == "OK")
                window.location = '@Url.Action("Index")';
            else
                ShowMessage("Error Inesperado", data, "warning");
        });
    }

    function CheckPendingPayments()
    {
        ExecuteAjax('@Url.Action("OpenPending","CashRegister")', {},
           function (response)
           {
               if (!$.isPlainObject(response))
                   $("#divPending").html(response);
           });
    }

    function CheckRefunding()
    {
        ExecuteAjax('@Url.Action("OpenRefunding", "CashRegister")', {},
           function (response)
           {
               if (!$.isPlainObject(response))
               {
                   console.log("Muestro las devoluciones pendientes");
                   $("#divRefunding").html(response);
               }
                   
           });
    }

    function Cancel()
    {
        $("#ModalCancel").off('hidden.bs.modal').on('hidden.bs.modal', function ()
        {
            ShowLoading();

            var param = { saleId: $("#TransId").val(), comment: $("#txtComment").val() }

            $("#TransId").val("");
            $("#txtComment").val("");

            ExecuteAjax('@Url.Action("Cancel","Sales")', param, function (j)
            {
                HideLoading();

                if (j.Result == 'OK')
                {
                    CheckPendingPayments();
                    ShowMessage("Cancelación exitosa", j.Message, 'success');
                }
                else
                    ShowMessage(j.Result, j.Message, 'warning');
            });
        });

        $("#ModalCancel").modal("hide");
    }


   

</script>
