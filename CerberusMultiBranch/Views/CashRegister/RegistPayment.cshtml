@model CerberusMultiBranch.Models.Entities.Operative.Sale
@using CerberusMultiBranch.Models.Entities.Operative;

@{
    ViewBag.Title = "Registro de pago";
    ViewBag.Class = "fa fa-money";
}

@*<h3 class="alert alert-success col-md-4">
    <span class="fa fa-building"></span>
    Sucursal @Model.Branch.Name
</h3>

<h3 class="alert alert-danger col-md-3 col-md-offset-1">
    Comisión @Model.ComAmount.ToString("c")
</h3>*@

<h3 class="alert alert-info col-md-3  col-md-offset-9" >
    Total <label id="lblTotalAmount">@Model.TotalAmount.ToString("c")</label> 
</h3>
<hr />

<div class="panel-group">
    <div class="panel panel-danger">
        <div class="panel-body">
            <div class="row">
                <div class="form-group col-md-5">
                    <label class="control-label">
                        Nombre del cliente
                    </label>
                    <div class="input-group">
                        <span class="input-group-addon"><i class="fa fa-black-tie"></i></span>
                        <input class="form-control" value="@Model.Client.Name" readonly />
                    </div>
                </div>

                <div class="form-group col-md-2">
                    <label class="control-label">
                        Tipo de pago
                    </label>
                    <div class="input-group">
                        <span class="input-group-addon"><i class="glyphicon glyphicon-credit-card"></i></span>
                        <input class="form-control" value="@Model.PaymentType.ToString()" readonly />
                    </div>
                </div>

                <div class="form-group col-md-2 col-md-offset-1">
                    <label class="control-label">
                        Fecha
                    </label>
                    <div class="input-group">
                        <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                        <input class="form-control" value="@Model.TransactionDate.ToString("dd/MM/yyyy")" readonly />
                    </div>
                </div>

                <div class="form-group col-md-2">
                    <label class="control-label">
                        Folio
                    </label>
                    <div class="input-group">
                        <span class="input-group-addon"><i class="fa fa-tag"></i></span>
                        <input class="form-control" value="@Model.Folio" readonly />
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="form-group col-md-3">
                    <label class="control-label">
                        Agente
                    </label>
                    <div class="input-group">
                        <span class="input-group-addon"><i class="fa fa-briefcase"></i></span>
                        <input class="form-control" value="@Model.User.UserName" readonly />
                    </div>
                </div>

                <div class="form-group col-md-2">
                    <label class="control-label">
                        Estado Anterior
                    </label>
                    <div class="input-group">
                        <span class="input-group-addon"><i class="glyphicon glyphicon-adjust"></i></span>
                        @switch (Model.LastStatus)
                        {
                            case TranStatus.OnRevision:
                                <label class="form-control alert alert-warning">Revisión</label>
                                break;
                            case TranStatus.Canceled:
                                <label class="form-control alert alert-warning">Cancelado</label>
                                break;
                            case TranStatus.InProcess:
                                <label class="form-control alert alert-danger">En Proceso</label>
                                break;
                            case TranStatus.Reserved:
                                <label class="form-control alert alert-info">Reservado</label>
                                break;
                            case TranStatus.Compleated:
                                <label class="form-control alert alert-success">Pagado</label>
                                break;
                        }
                    </div>
                </div>

                <div class="form-group col-md-2">
                    <label class="control-label">
                        Estado Actual
                    </label>
                    <div class="input-group">
                        <span class="input-group-addon"><i class="glyphicon glyphicon-adjust"></i></span>
                        @switch (Model.Status)
                        {
                            case TranStatus.OnRevision:
                                <label class="form-control alert alert-warning">Revisión</label>
                                break;
                            case TranStatus.Canceled:
                                <label class="form-control alert alert-warning">Cancelado</label>
                                break;
                            case TranStatus.InProcess:
                                <label class="form-control alert alert-danger">En Proceso</label>
                                break;
                            case TranStatus.Reserved:
                                <label class="form-control alert alert-info">Reservado</label>
                                break;
                            case TranStatus.Compleated:
                                <label class="form-control alert alert-success">Pagado</label>
                                break;
                        }
                    </div>
                </div>
                <div class="btn-group right col-md-offset-1 col-md-4" style="padding-top:25px !important;">
                    <button type="button" class="btn btn-primary" title="volver a la busqueda" id="btnSearch"
                            onclick="ShowLoading(); window.location='@Url.Action("PaymentAndNote")'">
                        <span class="fa fa-search-plus"></span>
                        <u>B</u>úsqueda
                    </button>
                    @if (User.IsInRole("Supervisor"))
                    {
                        <button type="button" class="btn btn-danger" title="cancelar venta"
                                onclick="$('#ModalCancel').modal('show');" id="btnCancel">
                            <span class="fa fa-times"></span>
                            <u>C</u>ancelar
                        </button>
                    }
                    <button class="btn btn-success" type="button" id="btnPayment"
                            onclick="$('#ModalPayment').modal('show')" title="Seleccionar forma de pago">
                        <span class="fa fa-dollar"></span>
                        <u>P</u>agar
                    </button>
                </div>
            </div>
        </div>
    </div>
    <div class="panel panel-danger">
        <div class="panel-body">
            <table id="tbDetails" class="table table-striped">
                <thead>
                    <tr>
                        <th></th>
                        <th>
                            @Html.DisplayName("Código")
                        </th>
                        <th>
                            @Html.DisplayName("SAT")
                        </th>
                        <th>
                            @Html.DisplayName("Descripción")
                        </th>
                        <th>
                            @Html.DisplayName("Precio")
                        </th>
                        <th>
                            @Html.DisplayName("Cantidad")
                        </th>
                        <th>
                            @Html.DisplayName("Total")
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.TransactionDetails)
                    {
                        <tr>
                            <td class="col-md-1" align="center">
                                @if (item.Product.Images.Count > 0)
                                {
                                    <img class="img-responsive" src="@item.Product.Images.FirstOrDefault().Path" style="max-height:40px" />
                                }
                                else
                                {
                                    <img class="img-responsive" src="~/Content/Images/sinimagen.jpg" style="max-height:40px" />
                                }
                            </td>
                            <td class="text-center">
                                @Html.DisplayFor(m => item.Product.Code)
                            </td>
                            <td>
                                @Html.DisplayFor(m => item.Product.Category.SatCode)
                            </td>
                            <td>
                                @Html.DisplayFor(m => item.Product.Name)
                            </td>
                            <td class="text-right">
                                @Html.DisplayFor(m => item.Price)
                            </td>
                            <td class="text-center">
                                @Html.DisplayFor(m => item.Quantity)
                            </td>
                            <td class="text-right">
                                @Html.DisplayFor(m => item.Amount)
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

@Html.Partial("_Cancelation")

@Html.Partial("_ChoosePayment",Model.TotalAmount)

@Html.HiddenFor(m => m.TransactionId)

<script>
    $(document).ready(function ()
    {
        //Paginate("#tbDetails",5)
    });

    function Cancel()
    {
        $("#ModalCancel").modal("hide");
        ShowLoading();

        var param = { transactionId: $("#TransactionId").val(), comment: $("#txtComment").val() }

        ExecuteAjax('@Url.Action("Cancel","Sales")', param, function (j)
        {
            if (j.Result = 'OK')
                window.location = '@Url.Action("PaymentAndNote")';
            else
                ShowMessage(j.Result, j.Message, 'warning');
        });
    }

    function Calculate(val)
    {
        var total = $("#lblTotalAmount").text().replace(/[$,]+/g, "");

        var result = (total - parseFloat(val));

        console.log(result);

        return result;
    }

    $(document).keydown(function (e)
    {
        if (e.which == 13 || e.altKey && e.keyCode == 80)
        {
            $("#btnPayment").click();
        }

        if (e.altKey && e.keyCode == 67)
        {
            $("#btnCancel").click();
        }

        if (e.altKey && e.keyCode == 66)
        {
            $("#btnSearch").click();
        }
    });

    function GetChange(val)
    {
        var total = $("#lblTotalAmount").text().replace(/[$,]+/g, "");
        return (parseFloat(val) - total);
    }

</script>