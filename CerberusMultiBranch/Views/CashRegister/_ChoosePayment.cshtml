@model CerberusMultiBranch.Models.ViewModels.Operative.ChoosePaymentViewModel
@using CerberusMultiBranch.Models.Entities.Operative;
@using CerberusMultiBranch.Support

<div id="ModalPayment" class="modal" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content panel panel-danger panel-group">
            <div class="modal-header panel-heading">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Total a Pagar @Model.AmountToPay.ToMoney()</h4>
            </div>

            <div class="modal-body panel-body">
                <h3>
                    <span class="fa fa-credit-card col-md-2"></span>
                    <label>
                        @Html.RadioButtonFor(model => model.PaymentMethod, PaymentMethod.Tarjeta)
                        @PaymentMethod.Tarjeta.ToString()
                    </label>
                </h3>
                <hr />
                <h3>
                    <span class="fa fa-money col-md-2"></span>
                    <label>
                        @Html.RadioButtonFor(model => model.PaymentMethod, PaymentMethod.Efectivo)
                        @PaymentMethod.Efectivo.ToString()
                    </label>
                </h3>
                <hr />
                <h3>

                    <span class="fa fa-dollar col-md-2"></span>
                    <label>
                        @Html.RadioButtonFor(model => model.PaymentMethod, PaymentMethod.Mixto)
                        @PaymentMethod.Mixto.ToString()
                    </label>
                </h3>

                <div id="Mix" class="hidden">
                    <div class="form-group col-md-4">
                        <label class="control-label">Monto Efectivo</label>
                        <div class="input-group">
                            <span class="input-group-addon">
                                <i class="fa fa-money"></i>
                            </span>
                            @Html.EditorFor(model => model.Payment, new { htmlAttributes = new { @class = "form-control", type = "number" } })
                        </div>
                    </div>

                    <div class="form-group col-md-4">
                        <label class="control-label">Monto Tarjeta</label>
                        <div class="input-group">
                            <span class="input-group-addon">
                                <i class="fa fa-credit-card-alt"></i>
                            </span>
                            @Html.EditorFor(model => model.AditionalPayment, new { htmlAttributes = new { @class = "form-control", type = "number" } })
                        </div>
                    </div>
                </div>

                <div id="Ref" class="hidden">
                    <div class="form-group">
                        <label class="control-label">Referencia</label>
                        <div class="input-group">
                            <span class="input-group-addon">
                                <i class="fa fa-bookmark"></i>
                            </span>
                            @Html.EditorFor(model => model.Reference, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>
                </div>

                <div class="col-md-10">
                    <div class="btn-group">
                        <button class="btn btn-success" type="button" title="Imprimir ticket" onclick="RegisterPayment(1)">
                            <span class="fa fa-ticket"></span>
                            Ticket
                        </button>
                        <button class="btn btn-primary" title="Imprimir Nota" onclick="RegisterPayment(2)">
                            <span class="fa fa-file"></span>
                            Nota
                        </button>
                    </div>
                </div>
                <div class="col-md-2">
                    <button class="btn btn-danger pull-right" type="button" onclick="ClosePayment()">
                        <span class="fa fa-times"></span>
                        Cancelar
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

@Html.HiddenFor(model => model.AmountToPay)
<script>
    $(document).ready(function () {

        $("input[name=PaymentMethod]").click(function () {
            var amount = $("#AmountToPay").val();
            $("#Payment").val(amount);
            $("#AditionalPayment").val(0);
            $("#Reference").val('');


            if (this.value == 'Efectivo' || this.value == 'Tarjeta') {
                $("#Mix").addClass("hidden");

                if (this.value == 'Tarjeta')
                    $("#Ref").removeClass("hidden");
                else
                    $("#Ref").addClass("hidden");
            }
            else {
                $("#Mix").removeClass("hidden");
                $("#Ref").removeClass("hidden");
            }
        });

        $("#Payment").keyup(function () {
            var val = $("#Payment").val();
            var result = Calculate(val);

            result = parseFloat(result).toFixed(2);

            $("#AditionalPayment").val(result);
        });

        $("#AditionalPayment").keyup(function () {
            var val = $("#AditionalPayment").val();
            var result = Calculate(val);

            result = parseFloat(result).toFixed(2);

            $("#Payment").val(result);
        });

        $("#ModalPayment").modal({ backdrop: 'static' });
    });

    function ClosePayment()
    {
        console.log("Cerrar modal");
        $("#ModalPayment").modal('hide');
    }

    function RegisterPayment(printType) {
        $("#ModalPayment").off("hidden.bs.modal").on("hidden.bs.modal", function () {
            ShowLoading();

            var param = {
                saleId: $("#SaleId").val(),
                paymentMethod: $("input[name=PaymentMethod]:checked").val(),
                payment: $("#Payment").val(),
                aditional: $("#AditionalPayment").val(),
                reference: $("#Reference").val(),
                printType: printType
            };

            ExecuteAjax('@Url.Action("RegisterPayment")', param, function (response)
            {
                HideLoading();

                if ($.isPlainObject(response))
                    ShowMessage(response.Result, response.Message, 'warning');
                else {
                    $("#divPrinter").html(response);

                    PrintNote();
                    setTimeout("closePrintView()", 2000);
                }
            });
        });

        $("#ModalPayment").modal('hide');
    }

    function closePrintView() {
        window.location.href = '@Url.Action("Index")';
    }


</script>