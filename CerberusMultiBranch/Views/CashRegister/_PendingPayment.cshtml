@model ICollection<CerberusMultiBranch.Models.Entities.Operative.Sale>
@using CerberusMultiBranch.Support

<div class="panel panel-primary">
    <div class="panel-heading">
        <h4 class="panel-title text-uppercase">
            <span class="fa fa-credit-card" style="float:left">
            </span>
            &nbsp;Cobros pendientes
        </h4>
    </div>
    <div class="panel-body">
        <table id="tbPendingPayment" class="table table-bordered small">
            <thead>
                <tr>
                    <th class="col-md-1 text-center">@Html.DisplayName("Folio")</th>
                    <th class="col-md-5 text-center">@Html.DisplayName("Cliente")</th>

                    <th class="col-md-2 text-center">@Html.DisplayName("Agente")</th>
                    <th class="col-md-1 text-center">@Html.DisplayName("Entrega")</th>
                    <th class="col-md-1 text-center">@Html.DisplayNameFor(m => m.First().TotalAmount)</th>

                    <th class="col-md-1 text-center">@Html.DisplayName("Tipo")</th>
                    <th class="col-md-1 text-center" />
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td class="text-uppercase">@Html.DisplayFor(m => item.Folio)</td>
                        <td>
                           @Html.DisplayUpperFor(m => item.Client.Name)
                        </td>

                        <td align="center">
                            @Html.DisplayUpperFor(m => item.User.UserName)
                        </td>
                        <td align="center">
                            @{ var sending = "Mostrador"; }

                            @if (item.SendingType != 0)
                            {
                                sending = "Domicilio";
                            }

                            @Html.DisplayFor(m => sending)
                        </td>
                        <td align="center">@Html.DisplayFor(m => item.TotalTaxedAmount)</td>

                        @*<td align="center">
                            @{
                                var alr = "alert-success";

                                switch (item.TransactionType)
                                {
                                    case CerberusMultiBranch.Models.Entities.Operative.TransactionType.Credito:
                                        alr = "alert-danger";
                                        break;
                                    case CerberusMultiBranch.Models.Entities.Operative.TransactionType.Preventa:
                                        alr = "alert-info";
                                        break;
                                    case CerberusMultiBranch.Models.Entities.Operative.TransactionType.Apartado:
                                        alr = "alert-warning";
                                        break;
                                }
                            }
                            <div class="form-control input-sm @alr">
                                @item.TransactionType.ToString()
                            </div>
                        </td>*@
                        <td align="center">
                            @item.TransactionType.ToString()
                        </td>
                        <td align="center">
                            <button class="btn btn-primary btn-sm" title="Recibir pago" onclick="ShowPaymentModal('@item.SaleId')">
                                <span class="fa fa-dollar" />
                                Cobrar
                            </button>
                        </td>
                    </tr>
                   }
            </tbody>
        </table>
    </div>
</div>

