@model CerberusMultiBranch.Models.Entities.Operative.Sale
@using CerberusMultiBranch.Support;
@using CerberusMultiBranch.Models.Entities.Operative

<script src="~/Scripts/printThis.js"></script>

<div hidden>
    <div id="divTicket" style="width:270px;">
        <table class="Ticket" style="width:100%;">
            <tr>
                <td align="center" colspan="2">
                    <div style="width:200px">
                        <img src="~/Content/Images/logo2.png" class="img-responsive" />
                    </div>
                </td>
            </tr>

            <tr>
                <td align="center" colspan="2">
                    Sucursal @Model.Branch.Name
                </td>
            </tr>
            <tr>
                <td align="center" colspan="2">
                    @Model.Branch.Address
                </td>
            </tr>
            <tr>
                <td style="height:20px" colspan="2"></td>
            </tr>
            <tr>
                <td class="text-left">
                    <label>Folio</label><br />
                </td>
                <td  class="text-right">
                    @Model.Folio
                </td>
            </tr>
            <tr>
                <td class="text-left">
                    <label>
                        Agente
                    </label>
                </td>
                <td  class="text-right">
                    @Model.User.UserName
                </td>
            </tr>
            <tr>
                <td class="text-left">
                    <label>Fecha</label><br />
                </td>
                <td  class="text-right">
                    @Model.TransactionDate.ToString("dd/MM/yyyy HH:mm")
                </td>
            </tr>
           
            @if (Model.Status == TranStatus.Revision)
            {
                <tr>
                    <td class="text-left">
                        <label>Expira</label><br />
                    </td>
                    <td  class="text-right">
                        @Model.Expiration.ToString("dd/MM/yyyy")
                    </td>
                </tr>
                var debt = (Model.TotalTaxedAmount - Model.SalePayments.Sum(s => s.Amount));
                <tr>
                    <td class="text-left">
                        <label> Total Pagos</label>
                    </td>
                    <td class="text-right">
                        @Model.SalePayments.Sum(s => s.Amount).ToMoney()
                    </td>
                </tr>
                <tr>
                    <td class="text-left">
                        <label> Restante</label>
                    </td>
                    <td class="text-right">
                        @debt.ToMoney()
                    </td>
                </tr>
            }

            else if (Model.SalePayments.Count > Cons.One)
            {
                <tr>
                    <td  class="text-left">
                        <label>Tipo de pago</label>
                    </td>
                    <td  class="text-right">
                        <a>@PaymentMethod.Mixto.ToString()</a>
                    </td>
                </tr>
            }
            else
            {
                <tr>
                    <td  class="text-left">
                        <label>Tipo de pago</label>
                    </td>
                    <td  class="text-right">
                        @Model.SalePayments.First().PaymentMethod.ToString()
                    </td>
                </tr>
            }
            <tr>
                <td style="height:20px" colspan="2"></td>
            </tr>
            <tr>
                <td align="center" colspan="2">
                    <table style="width:100%; border-top:dotted 1px gray">
                        @foreach (var tI in Model.SaleDetails)
                        {
                            var i = tI.Product.Code.Length - 4;
                            var sCode = tI.Product.Code.Length <= 4 ? tI.Product.Code : tI.Product.Code.Substring(i, 4);
                            var sName = tI.Product.Name.Length <= 12 ? tI.Product.Name : tI.Product.Name.Substring(0, 12);
                            <tr style="border-bottom:solid 1px gray; ">
                                <td class="text-left">
                                    @if (tI.ParentId == null)
                                    {
                                        @sCode
                                    }

                                </td>
                                <td class="text-left">
                                    @if (tI.ParentId != null)
                                    {
                                        sName = (sCode + " " + sName).ToString();
                                    }
                                    @sName
                                </td>
                                <td class="text-center">
                                    @tI.Quantity
                                </td>
                                <td class="text-right">
                                    @if (tI.ParentId == null)
                                    {
                                        @tI.TaxedAmount.ToMoney()
                                    }

                                </td>
                            </tr>

                            <tr><td colspan="4" style="height:10px"></td></tr>
                        }
                        <tr>
                            <td colspan="4" style="height:20px"></td>
                        </tr>
                        <tr>
                            <td colspan="2" />
                            <td>Total</td>
                            <td align="right">
                                @Model.TotalTaxedAmount.ToMoney()
                            </td>
                        </tr>
                        <tr style="height:60px">
                            <td colspan="4" />
                        </tr>
                        <tr style="height:30px">
                            <td colspan="4" align="center">
                                NO VALIDO COMO COMPROBANTE FISCAL
                            </td>
                        </tr>
                        <tr>
                            <td colspan="4">
                                <label>
                                    Solo se acepta mercancía en
                                    devolución   si  cumple con
                                    las  siguientes  políticas:
                                </label>
                                <br />
                                1. Mercancía sin daño
                                o retrabajo<br />
                                2. Mercancía   con
                                empaque original<br />
                                3. Máximo treinta días a
                                la fecha de la nota<br />
                                4.Autorización de su ejecutivo de venta
                            </td>
                        </tr>
                        <tr style="height:30px">
                            <td colspan="4" align="center">
                                ====  GRACIAS POR SU COMPRA  ====
                            </td>
                        </tr>
                    </table>
                </td>
            </tr>
        </table>
    </div>
</div>

<script>
    function PrintNote() {
        $("#divTicket").printThis();
    }
</script>