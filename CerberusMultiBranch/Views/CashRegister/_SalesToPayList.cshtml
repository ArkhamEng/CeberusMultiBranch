@model ICollection<CerberusMultiBranch.Models.Entities.Operative.Sale>
@using CerberusMultiBranch.Support

<table id="tbSales" class="table table-striped small">
    <thead>
        <tr>
            <th class="text-center">@Html.DisplayName("Folio")</th>
            <th class="text-center">@Html.DisplayName("Cliente")</th>

            <th class="text-center">@Html.DisplayName("Fecha venta")</th>

            <th class="text-center">@Html.DisplayNameFor(m => m.First().TotalAmount)</th>
            <th class="text-center">@Html.DisplayName("Tipo")</th>

            <th />
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@Html.DisplayFor(m => item.Folio)</td>
                <td>@Html.DisplayFor(m => item.Client.Name)</td>

                <td align="center">@item.TransactionDate.ToString("dd/MM/yyyy HH:mm")</td>

                <td align="center">@Html.DisplayFor(m => item.TotalTaxedAmount)</td>

                <td align="center">
                    @{
                        var alr = "alert-success";

                        switch (item.TransactionType)
                        {
                            case CerberusMultiBranch.Models.Entities.Operative.TransactionType.Credito:
                                alr = "alert-warning";
                                break;
                            case CerberusMultiBranch.Models.Entities.Operative.TransactionType.Preventa:
                                alr = "alert-info";
                                break;
                        }
                    }
                    <div class="form-control input-sm @alr">
                        @item.TransactionType.ToString()
                    </div>
                </td>

                <td class="col-xs-2" align="right">
                    <div class="btn-group">
                        @if (item.Status == CerberusMultiBranch.Models.Entities.Operative.TranStatus.Revision)
                        {
                            <button class="btn btn-success" type="button" title="Registrar pago" onclick="RegistPayment(@item.SaleId)">
                                <span class="fa fa-dollar"></span>
                            </button>
                        }
                        <button class="btn btn-warning" type="button" title="Imprimir ticket" onclick="PrintDocument(@item.SaleId,1)">
                            <span class="fa fa-ticket"></span>
                        </button>
                        <button class="btn btn-primary" type="button" title="Imprimir nota" onclick="PrintDocument(@item.SaleId,2)">
                            <span class="fa fa-file"></span>
                        </button>
                    </div>

                    @*<div class="dropdown">
                            <button class="btn btn-primary  dropdown-toggle" type="button" data-toggle="dropdown" title="Imprimir comprobante">
                                <span class="fa fa-print"></span>
                                <span class="caret"></span>
                            </button>
                            <ul class="dropdown-menu">
                                <li class="dropdown-header">Tipo de comprobante</li>
                                <li><a onclick="PrintDocument(@item.SaleId,1)">Ticket</a></li>
                                <li class="divider"></li>
                                <li><a onclick="PrintDocument(@item.SaleId,2)">Nota</a></li>
                            </ul>
                        </div>*@
                </td>
            </tr>
        }
    </tbody>
    @{
        var totalQuantity = Model.Sum(sale => sale.SaleDetails.Sum(s => s.Quantity));
        var totalAmount = Model.Sum(sale => sale.TotalTaxedAmount);
    }
</table>



<script>
    $(document).ready(function () {
        Paginate("#tbSales", 10);

        var tAmount = "Monto Total: " + GetCurrency(parseFloat('@totalAmount'));

        var tQuantity = "Articulos: " + '@totalQuantity';

        $("#lblTotalAmount").text(tAmount);
        $("#lblTotalQuantity").text(tQuantity);
    });

    function RegistPayment(id) {
        $("#ModalNotes").off('hidden.bs.modal').on('hidden.bs.modal', function () {
            ShowPaymentModal(id);
        });

        $("#ModalNotes").modal('hide');
    }

    function PrintDocument(saleId, printType)
    {
        $("#ModalNotes").off("hidden.bs.modal").on("hidden.bs.modal", function () {
            ShowLoading();
            ExecuteAjax('@Url.Action("PrintDocument")', { saleId: saleId, printType: printType }, function (response)
            {
                HideLoading();
                $("#divNotes").html(response);
            });
        });
        $("#ModalNotes").modal('hide');
    }
</script> 