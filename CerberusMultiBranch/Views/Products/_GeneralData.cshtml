@model CerberusMultiBranch.Models.ViewModels.Catalog.ProductViewModel

<div class="col-md-5 form-group">
    @Html.Label("Codigo", htmlAttributes: new { @class = "control-label" })
    <div class="input-group">
        <span class="input-group-addon"><i class="glyphicon glyphicon-tag"></i></span>
        @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control text-uppercase input-sm" } })
    </div>
    @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
</div>
<div class="form-group col-md-6 col-md-offset-1">
    @Html.Label("Sistema", htmlAttributes: new { @class = "control-label" })
    <div class="input-group">
        <span class="input-group-addon"><i class="glyphicon glyphicon-list-alt"></i></span>
        @Html.DropDownListFor(m => m.PartSystemId, Model.Systems, "", new { @class = "form-control text-uppercase input-sm", required = "true" })
    </div>
    @Html.ValidationMessageFor(m => m.PartSystemId, "", new { @class = "text-danger" })
</div>
<div class="form-group col-md-9">
    @Html.Label("Categoría", htmlAttributes: new { @class = "control-label" })
    <div class="input-group">
        <span class="input-group-addon"><i class="glyphicon glyphicon-list-alt"></i></span>
        @Html.DropDownListFor(m => m.CategoryId, Model.Categories, "", new { @class = "form-control text-uppercase input-sm" })
    </div>
    @Html.ValidationMessageFor(m => m.CategoryId, "", new { @class = "text-danger" })
</div>

<div class="col-md-3 form-group">
    @Html.Label("Existencias", htmlAttributes: new { @class = "control-label" })
    <div class="input-group">
        <span class="input-group-addon"><i class="fa fa-cubes"></i></span>
        @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control input-sm", required = "true" } })
    </div>
    @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
</div>

<div class="col-md-12 form-group">
    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
    <div class="input-group">
        <span class="input-group-addon"><i class="fa fa-comment-o"></i></span>
        @Html.TextAreaFor(model => model.Name, 3, 1, htmlAttributes: new { @class = "form-control text-uppercase input-sm" })
    </div>
    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
</div>

<div class="col-md-6 form-group">
    @Html.Label("Marca", htmlAttributes: new { @class = "control-label" })
    <div class="input-group">
        <span class="input-group-addon"><i class="glyphicon glyphicon-registration-mark"></i></span>
        @Html.EditorFor(model => model.TradeMark, new { htmlAttributes = new { @class = "form-control text-uppercase input-sm", required = "true" } })
    </div>
    @Html.ValidationMessageFor(model => model.TradeMark, "", new { @class = "text-danger" })
</div>

<div class="col-md-3 form-group">
    @Html.LabelFor(model => model.Unit, htmlAttributes: new { @class = "control-label" })
    <div class="input-group">
        <span class="input-group-addon"><i class="fa fa-balance-scale"></i></span>
        @Html.EditorFor(model => model.Unit, new { htmlAttributes = new { @class = "form-control text-uppercase input-sm", required = "true" } })
    </div>
    @Html.ValidationMessageFor(model => model.Unit, "", new { @class = "text-danger" })
</div>

<div class="col-md-3 form-group">
    @Html.Label("Precio compra", htmlAttributes: new { @class = "control-label" })
    <div class="input-group">
        <span class="input-group-addon"><i class="fa fa-dollar"></i></span>
        @Html.EditorFor(model => model.BuyPrice, new { htmlAttributes = new { @class = "form-control input-sm", required = "true", type="number" } })
    </div>
    @Html.ValidationMessageFor(model => model.BuyPrice, "", new { @class = "text-danger" })
</div>

<div class="col-md-4 form-group">
    @Html.LabelFor(model => model.StorePrice, htmlAttributes: new { @class = "control-label" })
    <div class="input-group">
        <span class="input-group-addon"><i class="fa fa-percent"></i></span>
        @Html.EditorFor(model => model.StorePercentage, new { htmlAttributes = new { @class = "form-control input-sm" } })
        <span class="input-group-addon"><i class="fa fa-dollar"></i></span>
        @Html.EditorFor(model => model.StorePrice, new { htmlAttributes = new { @class = "form-control input-sm" } })
    </div>
    @Html.ValidationMessageFor(model => model.StorePrice, "", new { @class = "text-danger" })
    @Html.ValidationMessageFor(model => model.StorePercentage, "", new { @class = "text-danger" })
</div>
<div class="col-md-4 form-group">
    @Html.LabelFor(model => model.DealerPrice, htmlAttributes: new { @class = "control-label" })
    <div class="input-group">
        <span class="input-group-addon"><i class="fa fa-percent"></i></span>
        @Html.EditorFor(model => model.DealerPercentage, new { htmlAttributes = new { @class = "form-control input-sm" } })
        <span class="input-group-addon"><i class="fa fa-dollar"></i></span>
        @Html.EditorFor(model => model.DealerPrice, new { htmlAttributes = new { @class = "form-control input-sm" } })
    </div>
    @Html.ValidationMessageFor(model => model.DealerPrice, "", new { @class = "text-danger" })
    @Html.ValidationMessageFor(model => model.DealerPercentage, "", new { @class = "text-danger" })
</div>

<div class="col-md-4 form-group">
    @Html.LabelFor(model => model.WholesalerPrice, htmlAttributes: new { @class = "control-label" })
    <div class="input-group">
        <span class="input-group-addon"><i class="fa fa-percent"></i></span>
        @Html.EditorFor(model => model.WholesalerPercentage, new { htmlAttributes = new { @class = "form-control input-sm" } })
        <span class="input-group-addon"><i class="fa fa-dollar"></i></span>
        @Html.EditorFor(model => model.WholesalerPrice, new { htmlAttributes = new { @class = "form-control input-sm" } })
    </div>
    @Html.ValidationMessageFor(model => model.WholesalerPrice, "", new { @class = "text-danger" })
    @Html.ValidationMessageFor(model => model.WholesalerPercentage, "", new { @class = "text-danger" })
</div>

<div class="col-md-3" id="divProductType">
    @Html.Label("Tipo de producto", htmlAttributes: new { @class = "control-label" })
    @Html.DropDownListFor(model => model.ProductType, Model.ProductTypes, new { @class = "form-control text-uppercase input-sm btnToHide" })
    @Html.HiddenFor(model => model.ProductType)

</div>

<div class="col-md-2 col-md-offset-1 form-group">
    @Html.Label("Fila", htmlAttributes: new { @class = "control-label" })
    <div class="input-group">
        <span class="input-group-addon"><i class="fa fa-bars"></i></span>
        @Html.EditorFor(model => model.Row, new { htmlAttributes = new { @class = "form-control input-sm", required = "true" } })
    </div>
    @Html.ValidationMessageFor(model => model.Row, "", new { @class = "text-danger" })
</div>

<div class="col-md-2  form-group">
    @Html.Label("Anaquel", htmlAttributes: new { @class = "control-label" })
    <div class="input-group">
        <span class="input-group-addon"><i class="fa fa-archive"></i></span>
        @Html.EditorFor(model => model.Ledge, new { htmlAttributes = new { @class = "form-control input-sm", required = "true" } })
    </div>
    @Html.ValidationMessageFor(model => model.Ledge, "", new { @class = "text-danger" })
</div>

<div class="col-md-4 form-group">
    @Html.Label("Cantidad máxima y minima", htmlAttributes: new { @class = "control-label" })
    <div class="input-group">
        <span class="input-group-addon"><i class="fa fa-plus"></i></span>
        @Html.EditorFor(model => model.MaxQuantity, new { htmlAttributes = new { @class = "form-control input-sm", type = "number" } })
        <span class="input-group-addon"><i class="fa fa-minus"></i></span>
        @Html.EditorFor(model => model.MinQuantity, new { htmlAttributes = new { @class = "form-control input-sm", type = "number" } })
    </div>
    @Html.ValidationMessageFor(model => model.MaxQuantity, "", new { @class = "text-danger" })
    @Html.ValidationMessageFor(model => model.MinQuantity, "", new { @class = "text-danger" })
</div>
<div class="col-md-3">
    <div class="checkbox form-control">
        <label>
            @Html.EditorFor(m => m.StockLocked)
            Inventario Bloqueado
        </label>
    </div>
</div>

<div class="col-md-3">
    <div class="checkbox form-control">
        <label>
            @Html.EditorFor(m => m.StockRequired)
            Generar Inventario
        </label>
    </div>
</div>




<label class="text-danger" id="lblQuickAddError"></label>
@Html.HiddenFor(model => model.ProductId)
@Html.HiddenFor(model => model.IsActive)


<script>
    $(document).ready(function () {
        ValidateStock();

        $("#StockRequired").change(function (a)
        {
            ValidateStock();
        });

        var allowLock = false;

        if ('@User.IsInRole("Administrador")' == 'True' && '@User.IsInRole("Supervisor")' == 'True')
            allowLock = true;
        
        if(parseInt('@Model.ProductId') > 0)
            $("#StockRequired").attr("disabled", true);

        $("#StockLocked").attr("disabled", !allowLock);
        

        $("#StockLocked").change(function (a) {
            ValidateStock(); 
        });


    });

    function ValidateStock()
    {
        var isLocked = $("#StockLocked").is(':checked');

        var checked = $("#StockRequired").is(':checked');

        $("#Quantity").attr("disabled", isLocked);
        $("#BuyPrice").attr("disabled", isLocked);

        if (!isLocked)
            $("#Quantity").attr("disabled", !checked);


        $("#Ledge").attr("disabled", !checked);
        $("#Row").attr("disabled", !checked);
        $("#MaxQuantity").attr("disabled", !checked);
        $("#MinQuantity").attr("disabled", !checked);
    }
</script>