@*@model IEnumerable<CerberusMultiBranch.Models.Entities.Catalog.Product>*@
@model IEnumerable<List<CerberusMultiBranch.Models.Entities.Catalog.Product>>

<link rel="stylesheet" type="text/css" href="//cdn.datatables.net/1.10.15/css/jquery.dataTables.min.css">
<script type="text/javascript" language="javascript" src="//cdn.datatables.net/1.10.15/js/jquery.dataTables.min.js"></script>

@{ int i = Model.FirstOrDefault() != null ? Model.FirstOrDefault().Count : 1; }
<table id="tbProducts" class="table table-condensed">
    <thead class="panel-heading">
        <tr hidden="hidden">
            @for (var j = 0; j < i; j++)
            {
                <th></th>
            }
        </tr>
    </thead>
    <tbody>

        @foreach (var item in Model)
        {
            <tr>
                @foreach (var prod in item)
                {
                    string c = string.Format("col-md-{0}", (12 / i));
                    <td class='@c'>

                        @{ string imgC = string.Format("col-md-{0}", (i * 2)); }

                        <div class='@imgC' style="vertical-align:central" onmouseover="SetPointer(this)"
                             onclick="Detail('@prod.ProductId')">
                            @if (prod.Images.Count > 0)
                            {
                                <img src="@prod.Images.First().Path" class="img-thumbnail img-responsive" />
                            }
                            else
                            {
                                <img src="~/Content/Images/sinimagen.jpg" class="img-thumbnail .img-responsive" />
                            }
                        </div>
                        @{ string txtC = string.Format("col-md-{0}", (11 - i * 2)); }
                        <div class='@txtC'>
                            <h4>
                                <i onmouseover="SetPointer(this)" onclick="Detail('@prod.ProductId')">
                                    @Html.DisplayFor(model => prod.Name)
                                </i>

                                @if (prod.ModelCompatibilities.Count > 0)
                                {
                                    string content = string.Empty;

                                    foreach (var m in prod.ModelCompatibilities)
                                    {
                                        content += "<h6>" + m.CarMake.Name + " " + m.Name + " " + m.CarYears.Min(y => y.Year) + '-' + m.CarYears.Max(y => y.Year) + "</h5>";
                                    }

                                    <span class="glyphicon glyphicon-eye-open text-warning" type="button" rel="popover" onmouseover="SetPointer(this)"
                                          title="Modelos Compatibles" onclick="CompatibilitiesPop('@content')">
                                    </span>
                                }
                            </h4>
                            @if (prod.TradeMark != null)
                            {
                                <h6>
                                    Por @prod.TradeMark
                                    <span class="fa fa-registered"></span>
                                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                    <label class="text-danger">
                                        Código @prod.Code
                                    </label>
                                </h6>
                            }
                            else
                            {
                                <h6>
                                    Código @prod.Code
                                </h6>
                            }
                            <h4>
                                <label>
                                    @Html.DisplayFor(model => prod.StorePrice)
                                </label>
                            </h4>
                            <h5 onmouseover="SetPointer(this)" onclick="StockInBranches('@prod.ProductId')">
                                <span class="badge bg-info">
                                    @prod.Quantity
                                </span>
                                disponibles
                                <span class="fa fa-cubes"></span>
                            </h5>

                            @Html.DisplayFor(model => prod.Description)
                        </div>
                        <div class="col-md-1" style="vertical-align:central">
                            <button class="btn btn-default btn-sm" onclick="window.location = '@Url.Action("Create", new { id = prod.ProductId })'">
                                <span class="glyphicon glyphicon-edit"></span>
                            </button>
                        </div>
                    </td>
                            }
                @for (var g = item.Count; g < i; g++)
                {
                    <td class="col-md-6"></td>
                }
            </tr>

                            }
    </tbody>
</table>

<div id="divImagesModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content panel panel-danger">
            <div id="divImages" class="modal-body panel-body">
            </div>
        </div>
    </div>
</div>

<div id="ModalStock" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content panel panel-danger">
            <div class="modal-header panel-heading">
                <h4 class="modal-title">
                    <span class="fa fa-cubes"></span>
                    Existencias en Sucursales
                </h4>
            </div>
            <div id="divModalStock" class="modal-body">
            </div>
        </div>
    </div>
</div>



<script>
    $(document).ready(function () {
        SetDataTable("#tbProducts", "#txtName");
        CompleateProgress();
    });

    function Detail(id) {
        window.location = '@Url.Action("Detail", "Products")/' + id;
    }


    function StockInBranches(id) {
        $.ajax({
            url: '@Url.Action("GetStockInBranches", "Products")',
            type: "POST",
            data: { productId: id },
            error: function (data) {
                console.log("Error Executing"); console.log(data);
            },
            statusCode:
            {
                200: function (view) {
                    $("#divModalStock").html(view);
                    $("#ModalStock").modal('show');
                },
                401: function (data) {
                    alert('401: Unauthenticated');
                }
            }
        });
    }

    function ShowSlide(id) {
        $.ajax({
            url: '@Url.Action("GetImages", "Products")',
            type: "POST",
            data: { productId: id },
            error: function (data) {
                console.log("Error Executing"); console.log(data);
            },
            statusCode:
            {
                200: function (view) {
                    $("#divImages").html(view);
                    $(".carousel-caption").hide()
                    $("#divImagesModal").modal('show');
                },
                401: function (data) {
                    alert('401: Unauthenticated');
                }
            }
        });
    }

    function Show(carousel) {
        $(divContent).html($(carousel).clone());
        $(divModal).modal('show');
    }

    function CompatibilitiesPop(content) {
        $('body').popover("destroy")
        var popOverSettings =
        {
            placement: 'right',
            container: 'body',
            html: true,
            selector: '[rel="popover"]', //Sepcify the selector here
            content: content
        }

        $('body').popover(popOverSettings);
    }


</script>