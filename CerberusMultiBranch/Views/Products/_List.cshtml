@model IEnumerable<List<CerberusMultiBranch.Models.Entities.Catalog.Product>>


@{ int i = Model.FirstOrDefault() != null ? Model.FirstOrDefault().Count : 1; }

<table id="tbProducts" class="table  text-uppercase" style="width:100%">
    <thead class="panel-heading">
        <tr hidden="hidden">
            @for (var j = 0; j < i; j++)
            {
                <th></th>
            }
        </tr>
    </thead>
    <tbody>

        @foreach (var item in Model)
        {
           
            <tr>
                @foreach (var prod in item)
                {
                    string c = string.Format("prodRow col-md-{0}  col-xs-4 col-sm-4 {1}", (12 / i),prod.IsIncart?"info":"");

                    var rowId = "prodRow" + prod.ProductId.ToString();

                    <td id='@rowId' class="@c">

                        @{ string imgC = string.Format("col-md-{0} col-xs-4 col-sm-4", 2); }

                        <div class='@imgC' style="align-items:center">
                            @if (prod.Images.Count > 0)
                            {
                                    <img src="@prod.Images.First().Path" class="img-responsive img-rounded" onmouseover="SetPointer(this)" style="max-height:150px"
                                         title="Haz click sobre la image para ver la galería" onclick="ShowImages('@prod.ProductId')" />
                            }
                            else
                            {
                                <img src="~/Content/Images/sinimagen.jpg" class="img-responsive" />
                            }
                        </div>
                        @{ string txtC = string.Format("col-md-{0} {1}", (i == 2 ? 8 : 9), !prod.IsActive ? "text-danger" : string.Empty); }
                        <div class='@txtC'>
                            <h4  onclick="Detail('@prod.ProductId','@prod.IsActive.ToString()')" onmouseover="SetPointer(this)" >
                                <strong>
                                    <u>@prod.Code</u>    
                                </strong>
                            </h4>

                            <h4>

                                @Html.DisplayFor(model => prod.Name)

                                @*@if (prod.ModelCompatibilities.Count > 0)
                                {
                                    string content = string.Empty;

                                    foreach (var m in prod.ModelCompatibilities)
                                    {
                                        content += "<h6>" + m.CarMake.Name + " " + m.Name + " " + m.CarYears.Min(y => y.Year) + '-' + m.CarYears.Max(y => y.Year) + "</h5>";
                                    }

                                    <span class="glyphicon glyphicon-eye-open text-warning" type="button" rel="popover" onmouseover="SetPointer(this)"
                                          title="Modelos Compatibles" onclick="CompatibilitiesPop('@content')">
                                    </span>
                                }*@
                            </h4>


                            @if (prod.TradeMark != null)
                            {
                                <h6>
                                    Por @prod.TradeMark
                                    <span class="fa fa-registered"></span>
                                </h6>
                            }
                            else
                            {
                                <h6>
                                    
                                    Código @prod.Code
                                </h6>
                            }
                            <h4>
                                <label>
                                    @Html.DisplayFor(model => prod.StorePrice)
                                </label>
                                |
                                <label>
                                    @Html.DisplayFor(model => prod.DealerPrice)
                                </label>
                                |
                                <label>
                                    @Html.DisplayFor(model => prod.WholesalerPrice)
                                </label>
                            </h4>
                            
                            <h5>
                                <button type="button" class="btn btn-default" title="ver movimientos" onclick="ShowMovements('@prod.ProductId')">
                                    <span class="badge bg-info">
                                        @prod.Quantity
                                    </span>
                                    disponibles
                                    <span class="fa fa-cubes"></span>
                                    Unidad: @prod.Unit
                                </button>
                             
                            </h5>
                            <h6>
                                Fila @prod.Row
                                <span class="fa fa-bars"></span>
                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                Anaquel @prod.Ledge
                                <span class="fa fa-archive"></span>
                            </h6>
                        </div>

                        @if (User.IsInRole("Capturista") || User.IsInRole("Supervisor"))
                        {
                            var btnC = string.Format("col-md-{0} btn-group-vertical hidden-xs hidden-sm", (i == 2 ? i : 1));

                            <div class='@btnC' style="vertical-align:central">

                                @if (prod.IsActive && !prod.StockLocked)
                                {
                                    if (!prod.IsLocked || (prod.IsLocked && prod.UserLock == User.Identity.Name))
                                    {
                                        <button class="btn btn-warning" title="Editar datos de producto"
                                                onclick="BeginEdit('@prod.ProductId')">
                                            <span class="glyphicon glyphicon-pencil"></span>
                                        </button>

                                        <button class="btn btn-danger" title="Eliminar producto"
                                                onclick="BeginDelete('@prod.ProductId')">
                                            <span class="glyphicon glyphicon-trash"></span>
                                        </button>
                                    }
                                }
                                else if (User.IsInRole("Supervisor") && (!prod.IsLocked || (prod.IsLocked && prod.UserLock == User.Identity.Name)))
                                {
                                    if (prod.IsActive)
                                    {
                                        <button class="btn btn-warning" title="Editar datos de producto"
                                                onclick="BeginEdit('@prod.ProductId')">
                                            <span class="glyphicon glyphicon-pencil"></span>
                                        </button>

                                        <button class="btn btn-danger" title="Eliminar producto"
                                                onclick="BeginDelete('@prod.ProductId')">
                                            <span class="glyphicon glyphicon-trash"></span>
                                        </button>
                                    }
                                    else
                                    {
                                        <button class="btn btn-success" title="Reactivar producto"
                                                onclick="BeginActivate('@prod.ProductId')">
                                            <span class="fa fa-recycle"></span>
                                        </button>
                                    }
                                }
                            </div>
                        }
                    </td>
                 }
                @for (var g = item.Count; g < i; g++)
                {
                    <td class="col-md-6"></td>
                }
            </tr>
           }
    </tbody>
</table>


<script>
    $(document).ready(function ()
    {
        Paginate("#tbProducts",20, false, "#txtName", false);
    });

    function Detail(id, isActive)
    {
        if (isActive == 'True' || isActive == 'true')
        {
            ShowLoading('static');

            ExecuteAjax('@Url.Action("ShowDetail", "Products")', { id: id }, function (response)
            {
                HideLoading(function ()
                {
                    ShowModal(response, 'static', "lg");
                });
            });
        }
        else
        {
            console.log("ShowDetail Id:" + id + " IsActive:" + isActive);
            ShowNotify("Producto Desactivado", "info", "Este producto ha sido desactivado, contacte a un supervisor para solicitar una activación", 3000);
        }
    }


    function BeginDelete(id)
    {
        ShowConfirm("¿Estas seguro de eliminar el producto?. Al eliminar tambien se borraran las imagenes y el registro no se podra recuperar", '@Url.Action("Delete", "Products")', id, LookFor);
    }

    function BeginActivate(id)
    {
        ShowConfirm("¿Estas seguro de la activación del producto?, Al activarlo, el producto estara disponible para venta y edición, ¿deseas continuar?", '@Url.Action("Activate", "Products")', id, LookFor);
    }

  
    function BeginEdit(id)
    {
        ShowCatalogModal(SearchBy, null, 'Product', id);
    }

    function BeginMovement(pid)
    {
        ShowLoading('static');

        var param = { productId: pid };

        ExecuteAjax('@Url.Action("BeginMovement", "Products")', param, function (view)
        {
            HideLoading(function ()
            {
                $("#divModals").html(view);
            });
        });
    }

    function ShowImages(id)
    {
        ShowLoading('static');

        ExecuteAjax('@Url.Action("GetProductImages","Products")', { id: id }, function (response) {
            HideLoading(function () {
                ShowModal(response,true,'lg');
            });
        });
    }

    function ShowMovements(id)
    {
        ShowLoading('static');

        ExecuteAjax('@Url.Action("GetProductMovements", "Products")', { id: id }, function (response)
        {
            HideLoading(function ()
            {
                ShowModal(response, 'static', 'lg');
            });
        });
    }

</script>