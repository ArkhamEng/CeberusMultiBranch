@model CerberusMultiBranch.Models.ViewModels.Catalog.ProviderViewModel

@{
    ViewBag.Title = "Registro de Proveedores";
    ViewBag.Class = "fa fa-address-book-o";
}

@*<div class="col-md-11">
    <h3>
        <span class="fa fa-address-book-o" style="float:left"></span>
        &nbsp;&nbsp;Edición de Proveedores
    </h3>
</div>*@
@Scripts.Render("~/bundles/jqueryval")

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    @Html.HiddenFor(m => m.ProviderId)

    @Html.HiddenFor(m => m.UpdDate)

    @Html.HiddenFor(m => m.IsActive)
    <hr />
    <div class="col-md-7">
        <div class="panel panel-danger">
            <div class="panel-body">
                <div class="row">
                    <div class="form-group col-md-4">
                        @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label" })
                        <div class="input-group">
                            <span class="input-group-addon"><i class="fa fa-key"></i></span>
                            @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control" } })
                            <span class="input-group-addon" ><input type="checkbox" id="cbCode" hidden></span>
                        </div>
                        @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group col-md-12">
                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
                        <div class="input-group">
                            <span class="input-group-addon"><i class="fa fa-id-badge"></i></span>
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", placeholder = Html.DisplayNameFor(model => model.Name) } })
                        </div>
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.City.StateId, htmlAttributes: new { @class = "control-label" })
                        <div class="input-group">
                            <span class="input-group-addon"><i class="fa fa-map"></i></span>
                            @Html.DropDownListFor(model => model.StateId, Model.States, "", htmlAttributes: new { @class = "form-control" })
                        </div>
                        @Html.ValidationMessageFor(model => model.City.StateId, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group col-md-4 col-md-offset-2">
                        @Html.LabelFor(model => model.ZipCode, htmlAttributes: new { @class = "control-label" })
                        <div class="input-group">
                            <span class="input-group-addon"><i class="fa fa-map-signs"></i></span>
                            @Html.EditorFor(model => model.ZipCode, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                        @Html.ValidationMessageFor(model => model.ZipCode, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group  col-md-6">
                        @Html.LabelFor(model => model.CityId, htmlAttributes: new { @class = "control-label" })
                        <div class="input-group">
                            <span class="input-group-addon"><i class="fa fa-map-o"></i></span>
                            @Html.DropDownListFor(mode => Model.CityId, Model.Cities,"", htmlAttributes: new { @class = "form-control" })
                        </div>
                        @Html.ValidationMessageFor(model => model.CityId, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-4 col-md-offset-2">
                        @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label" })
                        <div class="input-group">
                            <span class="input-group-addon"><i class="fa fa-phone"></i></span>
                            @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                        @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group col-md-12">
                        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label" })
                        <div class="input-group">
                            <span class="input-group-addon"><i class="fa fa-map-marker"></i></span>
                            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control", placeholder = Html.DisplayNameFor(model => model.Address) } })
                        </div>
                        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                    </div>

                </div>
            </div>
            <div class="panel-footer">
                <div class="btn-group">
                    @Html.Partial("_CatalogButtonGroup")
                </div>
            </div>
        </div>
    </div>

    <div class="col-md-5">
        <div class="panel panel-danger">
            <div class="panel-body">
                <div class="row">
                    <div class="form-group col-md-8">
                        @Html.LabelFor(model => model.FTR, htmlAttributes: new { @class = "control-label" })
                        <div class="input-group">
                            <span class="input-group-addon"><i class="fa fa-key"></i></span>
                            @Html.EditorFor(model => model.FTR, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                        @Html.ValidationMessageFor(model => model.FTR, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group col-md-12">
                        @Html.LabelFor(model => model.BusinessName, htmlAttributes: new { @class = "control-label" })
                        <div class="input-group">
                            <span class="input-group-addon"><i class="fa fa-black-tie"></i></span>
                            @Html.EditorFor(model => model.BusinessName, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                        @Html.ValidationMessageFor(model => model.BusinessName, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group  col-md-12">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })
                        <div class="input-group">
                            <span class="input-group-addon"><i class="fa fa-at"></i></span>
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control text-lowercase" } })
                        </div>
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group  col-md-12">
                        @Html.LabelFor(model => model.WebSite, htmlAttributes: new { @class = "control-label" })
                        <div class="input-group">
                            <span class="input-group-addon"><i class="glyphicon glyphicon-globe"></i></span>
                            @Html.EditorFor(model => model.WebSite, new { htmlAttributes = new { @class = "form-control text-lowercase" } })
                        </div>
                        @Html.ValidationMessageFor(model => model.WebSite, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
    </div>

}


<script>

    $(document).ready(LoadCreate);


    function LoadCreate() {
        SetCascade("#StateId", "#CityId", "GetCities");


        $("#Code").attr("readonly", !$(this).is(':checked'));

        $("#cbCode").click(function () {
            $("#Code").attr("readonly", !$(this).is(':checked'));
        })


        $("#Name").keyup(FillNames);
        $("#Address").keyup(FillTaxAddress);
        $("#ZipCode").keyup(FillTaxAddress);

        $("#States").change(FillTaxAddress);
        $("#CityId").change(FillTaxAddress);
    }

    function FillTaxAddress() {
        var tAddress = $("#Address").val() + "\n";

        if ($("#CityId").val() != '')
            tAddress = tAddress + $("#CityId option:selected").text() + ", ";

        if ($("#StateId").val() != '')
            tAddress = tAddress + $("#StateId option:selected").text() + "  C.P. ";


        tAddress = tAddress + $("#ZipCode").val();

        $("#TaxAddress").val(tAddress);
    }

    function FillNames() {
        $("#BusinessName").val($("#Name").val());
        $("#LegalRepresentative").val($("#Name").val());
    }
</script>


