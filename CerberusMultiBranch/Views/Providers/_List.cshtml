@model IEnumerable<ProviderViewModel>


@using CerberusMultiBranch.Support
@using CerberusMultiBranch.Models.ViewModels.Catalog

<table id="tbProviders" class="table dt-responsive nowrap table-bordered small hidden" style="width:100%">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Code)
            </th>
        
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.BusinessName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FTR)
            </th>
          
            <th>
                @Html.DisplayNameFor(model => model.WebSite)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Catalog)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Email)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Email2)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Credit)
            </th>
             
            <th>
                @Html.DisplayNameFor(model => model.Phones)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.AgentData)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Line)
            </th>
        
            <th>
               @Html.DisplayNameFor(model => model.StringAddress)
            </th>

            <th>
                @Html.DisplayNameFor(model => model.Edition)
            </th>  
            <th class="hidden">
                @Html.DisplayNameFor(model => model.Phone)
            </th>
            <th class="hidden">
                @Html.DisplayNameFor(model => model.CreditLimit)
            </th>
            <th class="hidden">
                @Html.DisplayNameFor(model => model.DaysToPay)
            </th>
           
            <th></th>
        </tr>
    </thead>

    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td class="text-uppercase">
                    @Html.DisplayFor(modelItem => item.Code)
                </td>
               
                <td class="text-uppercase">
                    @Html.DisplayUpperFor(modelItem => item.Name)
                </td>
                <td class="text-uppercase">
                    @Html.DisplayUpperFor(modelItem => item.BusinessName)
                </td>
                <td class="text-uppercase">
                    @Html.DisplayUpperFor(modelItem => item.FTR)
                </td>
                <td class="text-lowercase">
                    @Html.DisplayLowerFor(modelItem => item.WebSite)
                </td>
                <td class="text-lowercase">
                    @Html.DisplayLowerFor(modelItem => item.Catalog)
                </td>
                <td class="text-lowercase">
                    @Html.DisplayLowerFor(modelItem => item.Email)
                </td>
                <td class="text-lowercase">
                    @Html.DisplayLowerFor(modelItem => item.Email2)
                </td>
                <td class="text-uppercase" style="max-width:100px !important">
                    @Html.DisplayUpperFor(modelItem => item.Credit)
                </td>
                
                <td class="text-uppercase" style="max-width:100px !important">
                    @Html.DisplayFor(modelItem => item.Phones)
                </td>
                <td class="text-uppercase">
                    @Html.DisplayUpperFor(modelItem => item.AgentData)
                </td>
                <td class="text-uppercase">
                    @Html.DisplayUpperFor(modelItem => item.Line)
                </td>
             
                <td class="text-uppercase" style="max-width:150px">
                    @Html.DisplayUpperFor(modelItem => item.StringAddress)
                </td>
            
                <td class="text-uppercase">
                    @Html.DisplayFor(modelItem => item.Edition)
                </td>
                <td class="hidden">
                    @Html.DisplayFor(modelItem => item.Phone)
                </td>
                <td class="hidden">
                    @Html.DisplayFor(modelItem => item.CreditLimit)
                </td>
                <td class="hidden">
                    @Html.DisplayFor(modelItem => item.DaysToPay)
                </td>
              
                <td>
                    <button class="btn btn-warning btn-sm" title="Editar cliente" onclick="BeginEdit('@item.ProviderId')" disabled="@item.EditionDisabled">
                        <span class="fa fa-edit"></span>
                        Editar
                    </button>

                    <button class="btn btn-danger  btn-sm" title="Eliminar cliente" disabled="@item.DeleteDisabled" onclick="BeginDelete('@item.ProviderId','@item.Name')">
                        <span class="fa fa-trash-o"></span>
                        Eliminar
                    </button>

                    <button class="btn btn-primary btn-sm" title="Cargar productos" onclick="BeginUpdateCatalog('@item.ProviderId')" disabled="@item.UpdateCatalogDisabled">
                        <span class="fa fa-upload"></span>
                        Carga Productos
                    </button>
                </td>
            </tr>
        }
    </tbody>

</table>

<script>
    $(document).ready(function ()
    {
        $("#tbProviders").removeClass("hidden");

        var printOp = { Title: '@Html.Raw(Extension.GetTitle("Catálogo de Proveedores"))', Columns: [1, 2, 3, 4, 5, 6, 14,15,16] };
        Paginate("#tbProviders", 10, true, "#txtName", false, "#tbButtons", printOp);

        HideLoading();
    });

    function BeginEdit(id)
    {
        ShowCatalogModal(SearchById, null, 'Provider', id);
    }

    function BeginUpdateCatalog(id)
    {
        ShowLoading('static');

        ExecuteAjax('@Url.Action("BeginUpdateCatalog", "Providers")', { id: id }, function (response)
        {
            HideLoading(function ()
            {
                ShowModal(response, 'static');
            });
        });
    }

    function BeginDelete(id, name)
    {
        var text = "Estas a punto de eliminar al proveedor <br/>" + name + "<br/> ¿Estas seguro que deseas continuar?";

        ShowConfirm(text, '@Url.Action("Deactivate","Providers")', id, function ()
        {
            SearchProviders();
        });
    }
</script>