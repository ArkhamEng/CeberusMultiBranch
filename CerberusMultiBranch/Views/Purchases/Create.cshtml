@model CerberusMultiBranch.Models.Entities.Operative.Purchase

@{
    ViewBag.Title = "Compras";
}

@Scripts.Render("~/bundles/jqueryval")
<script>
    HalfProgress();
</script>
<div class="col-md-12">
    <h3>
        <span class="fa fa-shopping-bag" style="float:left"></span>
        &nbsp;&nbsp;Registro de compras
    </h3>
</div>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })


    <div class="panel-group col-md-11">
        <div class="panel panel-default">
            <div class="panel-body">
                <div class="row">
                    @Html.HiddenFor(m => m.BranchId)
                    @Html.HiddenFor(m => m.TransactionId)
                    @Html.HiddenFor(m => m.TransactionTypeId)
                    @Html.HiddenFor(m => m.UserId)
                    @Html.HiddenFor(m => m.IsCompleated)
                    @Html.HiddenFor(m => m.EmployeeId)
                    @Html.HiddenFor(m => m.ProviderId)

                    <div class="col-md-5">
                        @Html.Label("Nombre Proveedor", htmlAttributes: new { @class = "control-label" })
                        <div class="input-group">
                            <span class="input-group-addon"><i class="glyphicon glyphicon-filter"></i></span>
                            @Html.EditorFor(model=> model.Provider.Name, "", new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })

                            <span class="input-group-btn">
                                <button id="btnQuickProvider" type="button" class="btn btn-default">
                                    <span class="glyphicon glyphicon-search" id="spQuickProvider"></span>
                                </button>
                            </span>
                        </div>
                    </div>
                    <div class="col-md-3 col-md-offset-1">
                        @Html.Label("Tipo de pago", htmlAttributes: new { @class = "control-label" })
                        <div class="form-control">
                            <label class="radio-inline"><input id="rdCredit" type="radio" value="5" name="PaymentType">Crédito</label>
                            <label class="radio-inline"><input id="rdCash" type="radio" value="2" name="PaymentType">Contado</label>
                        </div>
                    </div>

                    <div class="col-md-2">
                        @Html.LabelFor(model => model.TransactionDate, htmlAttributes: new { @class = "control-label" })
                        <div class="input-group">
                            <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                            @Html.EditorFor(model => model.TransactionDate, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                        @Html.ValidationMessageFor(model => model.TransactionDate, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-5">
                        @Html.LabelFor(model => model.EmployeeName, htmlAttributes: new { @class = "control-label" })
                        <div class="input-group">
                            <span class="input-group-addon"><i class="fa fa-black-tie"></i></span>
                            @Html.EditorFor(model => model.EmployeeName, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                        </div>
                    </div>
                    <div class="col-md-3 col-md-offset-4">
                        @Html.LabelFor(model => model.Bill, htmlAttributes: new { @class = "control-label" })
                        <div class="input-group">
                            <span class="input-group-addon"><i class="fa fa-file-text-o"></i></span>
                            @Html.EditorFor(model => model.Bill, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                        @Html.ValidationMessageFor(model => model.Bill, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="panel-footer col-md-12">
                <div class="clearfix row">
                    <div class="btn-group col-md-6">
                        @Html.Partial("_CatalogButtonGroup")
                        <button id="btnCompleate" type="button" class="btn btn-warning Compleated" title="Terminar e inventariar?" tooltip-title="Ingresar al Inventario">
                            <span class="fa fa-cubes"></span>
                        </button>
                    </div>
                   
                    <div class="form-group col-md-3 col-md-offset-3">
                        @Html.LabelFor(model => model.TotalAmount, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="input-group">
                            <span class="input-group-addon"><i class="fa fa-dollar"></i></span>
                            @Html.EditorFor(model => model.TotalAmount, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="panel panel-default">
            <div id="divDetails" class="panel-body">
                @Html.Partial("_Details", Model.TransactionDetails)
            </div>
        </div>
    </div>

 
    <div id="divPopCompleate" style="display:none">
        <div class="text-center">
            <div class="btn-group">
                <button class="btn btn-primary btn-sm" onclick="SubmitCompleate()">
                    Si  <span class="fa fa-check"></span>
                </button>
                <button type="button" class="btn btn-danger  btn-sm" onclick="HidePopCompleate()">
                    No <span class="fa fa-times"></span>
                </button>
            </div>
        </div>
    </div>
}




@Html.Partial("_QuickProduct")

@Html.Partial("_QuickProvider")


<script>
    $(document).ready(function ()
    {
        LoadPopoverCompleate();

        if('@Model.PaymentType' == 'Cash')
            $("#rdCash").attr("checked", true);
        else
            $("#rdCredit").attr("checked", true);


        if ('@Model.TransactionId' > 0) {
            $("#btnShowQuick").prop("disabled", false)
            $("#btnBegin").prop("disabled", false)
        }
        else {
            $("#btnShowQuick").prop("disabled", true)
            $("#btnBegin").prop("disabled", true)
        }

        $("#spShowQuick").click(function () { $("#ModalQuickProduct").modal('show'); });

        $("#btnCompleate").click(function () {
            LoadPopoverCompleate();
        });

        if ('@Model.IsCompleated' == 'True') {
            $(".Compleated").hide();
            $("#btnSave").hide();
        }

        CompleateProgress();
    });



    function SubmitCompleate() {
        HidePopCompleate();
        $("#IsCompleated").val(true);
        $("#btnSubmit").click();
    }

    function LoadPopoverCompleate() {
        $("#btnCompleate").popover({
            html: true,
            content: function () { return $("#divPopCompleate").html(); },
            container: 'body'
        });
    }

    function HidePopCompleate() {
        $("#btnCompleate").popover('hide');
        $("#btnCompleate").data("bs.popover").inState.click = false;
    }

    function AddDetail(element) {
        var row = $(element).parent().parent().parent();
        cells = row.find("td");

        var price = row.find("#txtBuyPrice").val();
        var productId = row.find("#ProductId").val();
        var quantity = row.find("#Quantity").val();
        var transactionId = $("#TransactionId").val();


        $.ajax({
            url: '@Url.Action("AddDetail", "Purchases")',
            type: "POST",
            data: { productId: productId, transactionId: transactionId, price: price, quantity: quantity },
            error: function (data) {
                console.log("Error Executing"); console.log(data);
            },
            statusCode:
            {
                200: function (view) {
                    $("#divDetails").html(view);
                },
                401: function (data) {
                    alert('401: Unauthenticated');
                }
            }
        });
    }
</script>

