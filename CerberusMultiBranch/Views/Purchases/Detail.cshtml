@model CerberusMultiBranch.Models.Entities.Operative.Purchase
@using CerberusMultiBranch.Models.Entities.Operative;
@using CerberusMultiBranch.Models.ViewModels.Operative;
@{
    ViewBag.Title = "Registro de compras";
    ViewBag.Class = "fa fa-shopping-basket";
}

@Scripts.Render("~/bundles/jqueryval")


@Html.AntiForgeryToken()
@Html.ValidationSummary(true, "", new { @class = "text-danger" })

@Html.HiddenFor(model => model.ProviderId)
@Html.HiddenFor(model => model.PurchaseId)

<br />

<ul class="nav nav-tabs">
    <li class="active"><a data-toggle="tab" href="#tabProducts">Detalle de compra</a></li>
    @if (Model.Status == TranStatus.Reserved || Model.Status == TranStatus.Compleated)
    {
        <li><a data-toggle="tab" href="#tabPayments">Pagos <span id="TotalPayments" class="badge"></span></a></li>
    }
</ul>

<div class="tab-content">
    <div id="tabProducts" class="tab-pane fade in active">
        <div class="panel panel-danger">
            <div class="panel-body">
                <div class="panel panel-default">
                    <div class="panel-body">
                        <div class="row">
                            <div class="col-md-6 form-group">
                                @Html.Label("Proveedor", htmlAttributes: new { @class = "control-label small" })
                                <div class="input-group">
                                    <span class="input-group-addon"><i class="fa fa-black-tie"></i></span>
                                    <div class="form-control input-sm">
                                        @Model.Provider.Name
                                    </div>
                                </div>
                                @Html.ValidationMessageFor(model => model.Bill, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-5  pull-right">
                                <div class="col-md-6">
                                    @Html.Label("Fecha de Venta", htmlAttributes: new { @class = "control-label small" })
                                </div>
                                <div class="col-md-6">
                                    @Html.Label("Fecha de Expiración", htmlAttributes: new { @class = "control-label small" })
                                </div>
                                <div class="input-group">
                                    <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                                    <div class="form-control input-sm">
                                        @Model.TransactionDate.ToString("dd/MM/yyyy")
                                    </div>
                                    <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                                    <div class="form-control input-sm">
                                        @Model.Expiration.ToString("dd/MM/yyyy")
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-3 form-group">
                                @Html.LabelFor(model => model.Bill, htmlAttributes: new { @class = "control-label small" })
                                <div class="input-group">
                                    <span class="input-group-addon"><i class="fa fa-file-text-o"></i></span>
                                    <div class="form-control input-sm">
                                        @Model.Bill
                                    </div>
                                </div>
                                @Html.ValidationMessageFor(model => model.Bill, "", new { @class = "text-danger" })
                            </div>

                            <div class="col-md-3 form-group">
                                @Html.Label("Tipo Compra", htmlAttributes: new { @class = "control-label small" })
                                <div class="input-group">
                                    <span class="input-group-addon"><i class="fa fa-shopping-basket"></i></span>
                                    <div class="form-control input-sm">
                                        @Model.TransactionType.ToString()
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-5 row pull-right">
                                <div class="col-md-6 form-group">
                                    @Html.Label("Sub-Total", htmlAttributes: new { @class = "control-label small" })
                                    <div class="input-group">
                                        <span class="input-group-addon"><i class="fa fa-dollar"></i></span>
                                        <div class="form-control input-sm" id="divTotalAmount">
                                            @Model.TotalAmount.ToString("c")
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6 form-group">
                                    @Html.Label("Total", htmlAttributes: new { @class = "control-label small" })
                                    <div class="input-group">
                                        <span class="input-group-addon"><i class="fa fa-dollar"></i></span>
                                        <div class="form-control input-sm" id="divTaxedAmount">
                                            @Model.TotalTaxedAmount.ToString("c")
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="panel-footer">
                     
                            <button type="button" class="btn btn-primary" title="Nueva búsqueda"
                                    onclick="ShowLoading(); window.location='@Url.Action("History")'">
                                <span class="fa fa-backward"></span>
                                Volver
                            </button>

                            <button id="btnCompleate" type="button" class="btn btn-success Compleated" title="Terminar e inventariar?"
                                    tooltip-title="Ingresar al Inventario">
                                <span class="fa fa-cubes"></span>
                                Terminar
                            </button>
                            <button id="btnShowQuick" class="btn btn-warning Compleated" type="button">
                                <span class="glyphicon glyphicon-plus-sign"></span>
                                Agregar
                            </button>
                       

                        <button id="btnCancel" class="btn btn-danger pull-right" type="button">
                            <span class="glyphicon glyphicon-remove"></span>
                            Cancelar
                        </button>
                    </div>
                </div>
                @Html.HiddenFor(model => model.TotalAmount)
                <div class="panel panel-default">
                    <div id="divDetails" class="panel-body">
                        @Html.Partial("_Details", Model.PurchaseDetails)
                    </div>
                </div>
            </div>
        </div>

    </div>
    @if (Model.Status == TranStatus.Reserved || Model.Status == TranStatus.Compleated)
    {
        <div id="tabPayments" class="tab-pane fade">
            <div class="panel panel-danger">
                <div id="divPurchasePayments" class="panel-body">
                    @Html.Partial("_PurchasePayments", Model.PurchasePayments)
                </div>
            </div>
        </div>
    }

</div>

@Html.Partial("_Cancelation")

<div id="divAdd"></div>

@Html.Partial("_SearchProduct")


@Html.Hidden("ExCode")


<script>
    $(document).ready(function () {

        $("#btnNewSearch").hide();

        $("#spShowQuick").click(function () {
            $("#ModalExternalProduct").modal('show');
        });

        $("#btnCompleate").click(function () {
            ShowConfirm("Terminar e inventariar?", "Estas seguro que quieres inventariar esta compra?", 'static', SubmitCompleate);
        });

        if ('@Model.Status' == '@TranStatus.Reserved' || '@Model.Status' == '@TranStatus.Compleated')
        {
            $(".Compleated").hide();
        }

        $("input[name=TransactionType]").click(function ()
        {
            if (this.value != 'Credito') {
                var date = $("#TransactionDate").val();
                $("#Expiration").val(date);
            }
        });

        $("#btnShowQuick").click(function ()
        {
            $("#ModalProduct").modal('show');
        });

    });


    function ProviderSelected(id, name)
    {
        $("#ProviderId").val(id);
        $("#Provider_Name").val(name);

        $("#ModalQuickProvider").modal('hide');
    }

    function SubmitCompleate()
    {
        ShowLoading();

        ExecuteAjax('@Url.Action("Compleate")', { purchaseId: $("#PurchaseId").val() }, function (response)
        {
            HideLoading();
            if (response.Result != 'OK')
                ShowMessage(response.Header, response.Message, 'warning', true);
            else
                window.location = '@Url.Action("Detail",new { id= Model.PurchaseId})';
        });
    }

</script>

