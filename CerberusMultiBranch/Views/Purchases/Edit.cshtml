@model CerberusMultiBranch.Models.Entities.Operative.Purchase
@using CerberusMultiBranch.Models.Entities.Operative;
@using CerberusMultiBranch.Models.ViewModels.Operative;
@{
    ViewBag.Title = "Registro de compras";
    ViewBag.Class = "fa fa-shopping-basket";
}

@Scripts.Render("~/bundles/jqueryval")


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    @Html.HiddenFor(model => model.ProviderId)
    @Html.HiddenFor(model => model.PurchaseId)

    <br />
    <div class="well well-sm col-md-6">
        <h4>
            <strong>
                <span class="fa fa-user"></span>
            </strong>
            @Model.Provider.Name
        </h4>
    </div>

    <div class="well well-sm col-md-2 col-md-offset-4 text-right">
        <h4>
            Total :
            <a id="Amount">
                @Model.TotalAmount.ToString("c")
            </a>
        </h4>
    </div>
    <br />
    <div class="panel panel-default">
        <div class="panel-body">

            <div class="col-md-3 form-group">
                @Html.LabelFor(model => model.Bill, htmlAttributes: new { @class = "control-label" })
                <div class="input-group">
                    <span class="input-group-addon"><i class="fa fa-file-text-o"></i></span>
                    <div class="form-control">
                        @Model.Bill
                    </div>
                </div>
                @Html.ValidationMessageFor(model => model.Bill, "", new { @class = "text-danger" })
            </div>

            <div class="col-md-3 form-group">
                @Html.Label("Tipo Compra", htmlAttributes: new { @class = "control-label" })
                <div class="form-control">
                    @Html.Label(TransactionType.Contado.ToString())
                    @Html.RadioButtonFor(model => model.TransactionType, TransactionType.Contado)

                    @Html.Label(TransactionType.Credito.ToString())
                    @Html.RadioButtonFor(model => model.TransactionType, TransactionType.Credito)
                </div>
            </div>
            <div class="col-md-5  pull-right">
                <div class="col-md-12  form-group">
                    <div class="col-md-6">
                        @Html.Label("Fecha de Compra", htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-6">
                        @Html.Label("Fecha de Expiración", htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="input-group">
                        <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                        @Html.EditorFor(model => model.TransactionDate, new { htmlAttributes = new { @class = "form-control" } })
                        <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                        @Html.EditorFor(model => model.Expiration, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                    @Html.ValidationMessageFor(model => model.TransactionDate, "", new { @class = "text-danger" })
                    @Html.ValidationMessageFor(model => model.Expiration, "", new { @class = "text-danger" })
                </div>

            </div>
            <div class="form-group col-md-3">
                <div class="input-group">
                    <span class="input-group-addon"><i class="fa fa-thermometer-half"></i></span>
                    @switch (Model.Status)
                {
                    case TranStatus.InProcess:
                    <div class="form-control alert-info">
                        En Proceso
                    </div>
                            break;
                        case TranStatus.Compleated:
                    <div class="form-control alert-success">
                        Inventariado
                    </div>
                            break;
                        case TranStatus.Canceled:
                    <div class="form-control alert-danger">
                        Cancelado
                    </div>
                            break;
                    }

                </div>
            </div>
            <div class="form-group col-md-3">
                <div class="input-group">
                    <span class="input-group-addon"><i class="fa fa-black-tie"></i></span>
                    <div class="form-control">
                        @Model.User.UserName
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="btn-group pull-right">
                    <button type="button" class="btn btn-primary" title="Nueva búsqueda" onclick="ShowLoading(); window.location='@Url.Action("History")'">
                        <span class="fa fa-backward"></span>
                        Volver
                    </button>

                    <button id="btnCompleate" type="button" class="btn btn-success Compleated" title="Terminar e inventariar?" tooltip-title="Ingresar al Inventario">
                        <span class="fa fa-cubes"></span>
                        Terminar
                    </button>
                    <button id="btnShowQuick" class="btn btn-warning Compleated" type="button">
                        <span class="glyphicon glyphicon-plus-sign"></span>
                        Agregar
                    </button>
                    <button id="btnCancel" class="btn btn-danger" type="button">
                        <span class="glyphicon glyphicon-remove"></span>
                        Cancelar
                    </button>
                </div>
            </div>

        </div>
    </div>

    <div class="panel panel-default">
        <div id="divDetails" class="panel-body">
            @Html.Partial("_Details", Model.PurchaseDetails)
        </div>
    </div>



    <div id="divPopCompleate" style="display:none">
        <div class="text-center">
            <div class="btn-group">
                <button class="btn btn-primary btn-sm" type="button" onclick="SubmitCompleate()">
                    Si  <span class="fa fa-check"></span>
                </button>
                <button type="button" class="btn btn-danger  btn-sm" onclick="HidePopCompleate()">
                    No <span class="fa fa-times"></span>
                </button>
            </div>
        </div>
    </div>
}


<div id="divClone"></div>



@Html.Partial("_SearchExternalProduct")

@Html.Partial("_SearchInternalProduct")



@Html.Partial("_QuickProvider")

@Html.Hidden("ExCode")


<script>
    $(document).ready(function ()
    {
        LoadPopoverCompleate();

        $("#btnNewSearch").hide();

        if (@Model.PurchaseId == 0)
        {
            $("#btnShowQuick").hide();
        }

        $("#btnShowProviders").click(function () {
            $("#ModalQuickProvider").modal('show');
        });

        $("#spShowQuick").click(function ()
        {
            $("#ModalExternalProduct").modal('show');
        });

        $("#btnCompleate").click(function ()
        {
            LoadPopoverCompleate();
        });

        if ('@Model.Status' == '@TranStatus.Compleated')
        {
            $(".Compleated").hide();
            $("#btnSave").hide();
        }
    });

    function ProviderSelected(id, name)
    {
        $("#ProviderId").val(id);
        $("#Provider_Name").val(name);

        $("#ModalQuickProvider").modal('hide');
    }

    function SubmitCompleate()
    {
        HidePopCompleate();
        ShowLoading();

        var param =
            {
                purchaseId:$("#PurchaseId").val(),
                purchaseDate:$("#TransactionDate").val(),
                expirationDate:$("#Expiration").val(),
                purchaseType:$("#TransactionType").val(),
            };
        console.log(param);
        ExecuteAjax('@Url.Action("Compleate")',param,function(response)
        {
            HideLoading();
            if(response.Result!='OK')
                ShowMessage(response.Header,response.Message,'warning',true);
            else
                window.location = '@Url.Action("Edit",new { id= Model.PurchaseId})';
        });
    }

    function LoadPopoverCompleate()
    {
        $("#btnCompleate").popover({
            html: true,
            content: function () { return $("#divPopCompleate").html(); },
            container: 'body'
        });
    }

    function HidePopCompleate()
    {
        $("#btnCompleate").popover('hide');
        $("#btnCompleate").data("bs.popover").inState.click = false;
    }

</script>

