
@model CerberusMultiBranch.Models.ViewModels.Operative.BeginPurchaseViewModel

<script src="~/Scripts/jquery.validate.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

<form id="frmBeginPurchase">
    <div id="ModalBeginPurchase" class="modal fade" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content panel-danger">
                <div class="modal-header panel-heading">
                    <h4 class="modal-title">
                        <span class="fa fa-shopping-basket"></span>
                        Registro de nueva compra
                    </h4>
                </div>
                <div class="modal-body panel-body">

                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.Bill, htmlAttributes: new { @class = "control-label" })
                        <div class="input-group">
                            <span class="input-group-addon"><i class="fa fa-file-o"></i></span>
                            @Html.EditorFor(model => model.Bill, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                        @Html.ValidationMessageFor(model => model.Bill, "", new { @class = "text-danger" })
                    </div>


                    <div class="col-md-6  form-group">
                        <label>Tipo de compra </label>
                        <div class="col-md-12  form-control">
                            <div class="input-group">
                                @{
                                    foreach (var type in Model.TransactionTypes)
                                    {
                                        <div class="input-group-addon">
                                            <Label class="control-label">
                                                @type.ToString()
                                                @Html.RadioButtonFor(model => model.TransactionType, type)
                                            </Label>
                                        </div>
                                    }
                                }
                            </div>
                        </div>
                    </div>



                    <div class="form-group col-md-12">
                        @Html.LabelFor(model => model.ProviderName, htmlAttributes: new { @class = "control-label" })
                        <div class="input-group">
                            <span class="input-group-addon"><i class="fa fa-id-badge"></i></span>
                            @Html.EditorFor(model => model.ProviderName, new { htmlAttributes = new { @class = "form-control", list = "Providers" } })
                            <datalist id="Providers"></datalist>
                        </div>
                        @Html.ValidationMessageFor(model => model.ProviderName, "", new { @class = "text-danger" })
                    </div>


                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.PurchaseDate, htmlAttributes: new { @class = "control-label" })
                        <div class="input-group">
                            <span class="input-group-addon"><i class="fa fa-calendar-check-o"></i></span>
                            @Html.EditorFor(model => model.PurchaseDate, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                        @Html.ValidationMessageFor(model => model.PurchaseDate, "", new { @class = "text-danger" })
                    </div>

                    <div id="divDays" class="form-group col-md-6 hidden">
                        @Html.LabelFor(model => model.Days, htmlAttributes: new { @class = "control-label" })
                        <div class="input-group">
                            <span class="input-group-addon"><i class="fa fa-calendar-minus-o"></i></span>
                            @Html.EditorFor(model => model.Days, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                        @Html.ValidationMessageFor(model => model.Days, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="panel-footer">
                    <div class="btn-group">
                        <button class="btn btn-primary" onclick="AcceptCreate()" type="button">
                            <span class="fa fa-check"></span>
                            Aceptar
                        </button>
                        <button class="btn btn-danger" onclick="Close()" type="button">
                            <span class="fa fa-times"></span>
                            Cancelar
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>

</form>

@Html.HiddenFor(model => model.ProviderId)

<script>
   
    $(document).ready(function ()
    {
        var form = $("#frmBeginPurchase");
        form.validate();

        $("#ModalBeginPurchase").modal({ backdrop: 'static' });

        Compleate("#ProviderName", "#Providers", '@Url.Action("AutoCompleate","Providers")', function (id, value)
        {
            $("#ProviderId").val(id);
        });

        $("input[name=TransactionType]").click(function ()
        {
            if(this.value=='Credito')
            {
                $("#divDays").removeClass("hidden");
            }
            else
            {
                $("#divDays").val(0);
                $("#divDays").addClass("hidden");
            }
        });
    });

    function AcceptCreate()
    {
        var form = $("#frmBeginPurchase");

        if (!form.valid())
            return;

        console.log("Entrando en accept");
        var purchase =
            {
                ProviderId: $("#ProviderId").val(),
                PurchaseDate: $("#PurchaseDate").val(),
                Days: $("#Days").val(),
                TransactionType: $("input[name=TransactionType]:checked").val(),
                Bill: $("#Bill").val()
            };
        console.log(purchase);

        ExecuteAjax('@Url.Action("Create","Purchases")', { model: purchase }, function (response)
        {
            window.location = '@Url.Action("Detail")/'+response.Id;
        });
    }

    function Close()
    {
        $("#ModalBeginPurchase").modal('hide');
    }
</script>

