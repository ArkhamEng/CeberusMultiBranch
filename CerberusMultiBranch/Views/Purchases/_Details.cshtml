@model ICollection<CerberusMultiBranch.Models.Entities.Operative.PurchaseDetail>
@using CerberusMultiBranch.Support

@Html.ValidationMessage("AddDetail", "", new { @class = "text-danger" })
<table id="tbPurchaseDetails" class="table dt-responsive nowrap table-bordered small"  style="width:100%">
    <thead>
        <tr>
            <th class="col-md-1"></th>
            <th>
                @Html.DisplayName("Código")
            </th>
            <th>
                @Html.DisplayName("Descripción")
            </th>
            <th>
                @Html.DisplayName("Costo")
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Quantity)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Amount)
            </th>
           <td></td>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr class="text-uppercase">
                <td align="center">
                    @if (item.Product.Images != null && item.Product.Images.Count > 0)
                    {
                        <img src="@item.Product.Images.First().Path" class="img-responsive" style="max-height:50px" />
                    }
                    else
                    {
                        <img src="~/Content/Images/sinimagen.jpg" class="img-responsive" />
                    }
                </td>
                <td>
                  <label>Proveedor</label> @item.Product.Equivalences.First().Code <br />
                  <label>Autobien</label>  @Html.DisplayFor(modelItem => item.Product.Code)
                </td>
                <td style="white-space:normal">
                    @Html.DisplayFor(modelItem => item.Product.Name)<br />
                </td>
                <td>
                   @Html.DisplayFor(m => item.Price)
                </td>
                <td align="center">
                    @Html.DisplayFor(modelItem => item.Quantity)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Amount)
                </td>
                <td  class="Compleated">
                    <div class="btn-group">
                        <button class="btn btn-danger" type="button" onclick="RemoveDetail(@item.PurchaseId,@item.ProductId)">
                            <span class="glyphicon glyphicon-trash"></span> 
                        </button>
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>
@{
    var det = Model.FirstOrDefault();
    var totAmount = det != null ? det.Purchase.TotalAmount : Cons.Zero;
    var totTaxedAmount = det != null ? det.Purchase.TotalTaxedAmount : Cons.Zero;
    var finalAmount = det != null ? det.Purchase.FinalAmount : Cons.Zero;
 }

<script>
    $(document).ready(function ()
    {

        Paginate("#tbPurchaseDetails", 20, true, null, false);

        if ('@Model.Count' > 0)
            $("#btnCompleate").show();
        else
            $("#btnCompleate").hide();


        $("#divTotalAmount").text('@totAmount.ToMoney()');

        $("#divTaxedAmount").text('@totTaxedAmount.ToMoney()');

        $("#divFinalAmount").text('@finalAmount.ToMoney()');

    });

    function RemoveDetail(tid, pid)
    {
        ShowLoading('static');
        var param = { transactionId: tid, productId: pid };

        ExecuteAjax('@Url.Action("RemoveDetail", "Purchases")', param, function (view) {
            HideLoading(function () {
                $("#divDetails").html(view);
            });

        });
    }

    function LookFor() {
        //este metodo es llamado por default cuando se termina el copiado
    }

</script>