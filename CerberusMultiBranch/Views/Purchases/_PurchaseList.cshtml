@model IEnumerable<Purchase>
@using CerberusMultiBranch.Models.Entities.Operative
@using CerberusMultiBranch.Support

<table id="tbPurchases" class="table dt-responsive nowrap table-bordered small hidden" style="width:100%">
    <thead>
        <tr>
            <td>
                @Html.DisplayNameFor(model => model.Status)
            </td>
            <td>
                @Html.DisplayName("Tipo")
            </td>
            <th>
                @Html.DisplayNameFor(model => model.Branch.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Bill)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Provider.Name)
            </th>

            <th>
                @Html.DisplayNameFor(model => model.TransactionDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Expiration)
            </th>
            <td>
                @Html.DisplayNameFor(model => model.TotalTaxedAmount)
            </td>
            <td>
                @Html.DisplayNameFor(model => model.DiscountPercentage)
            </td>
            <td>
                @Html.DisplayNameFor(model => model.DiscountedAmount)
            </td>
            <td>
                @Html.DisplayNameFor(model => model.FinalAmount)
            </td>
            <th>
                @Html.DisplayName("Abonos")
            </th>
            <th>
                @Html.DisplayName("Deuda")
            </th>
            <td>
                @Html.DisplayNameFor(model => model.InsDate)
            </td>
            <td>
                @Html.DisplayNameFor(model => model.InsUser)
            </td>
       
            <td>
                @Html.DisplayNameFor(model => model.UpdDate)
            </td>
            <td>
                @Html.DisplayNameFor(model => model.UpdUser)
            </td>
        
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td class="@item.StatusStyle">
                    @Html.DisplayFor(m => item.PurchasStatus)
                </td>
                <td>
                    @Html.DisplayFor(m => item.TransactionType)
                </td>
                <td>
                    @Html.DisplayFor(m => item.Branch.Name)
                </td>
                <td>
                    @Html.DisplayUpperFor(m => item.Bill)
                </td>
                <td style="white-space:nowrap">
                    @Html.DisplayUpperFor(m => item.Provider.Name)
                </td>
             
                <td>
                    @Html.DisplayFor(m => item.TransactionDate)
                </td>
                <td>
                    @Html.DisplayFor(m => item.Expiration)
                </td>
                <td>
                    @Html.DisplayFor(m => item.TotalTaxedAmount)
                </td>
                <td>
                    @Html.DisplayFor(model => item.DiscountPercentage) %
                </td>
                <td>
                    @Html.DisplayFor(model => item.DiscountedAmount)
                </td>
                <td>
                    @Html.DisplayFor(model => item.FinalAmount)
                </td>
                <td>
                    @item.PurchasePayments.Sum(p => p.Amount).ToMoney()
                </td>

                <td>
                    @{ var debt = item.FinalAmount - item.PurchasePayments.Sum(p => p.Amount); }
                    @debt.ToMoney()
                </td>
                <td>
                    @Html.DisplayFor(model => item.InsDate)
                </td>
                <td>
                    @Html.DisplayFor(model => item.InsUser)
                </td>

                <td>
                    @Html.DisplayFor(model => item.UpdDate)
                </td>
                <td>
                    @Html.DisplayFor(model => item.UpdUser)
                </td>
                <td>
                    <button class="btn btn-warning bt-sm"
                            onclick="window.location = '@Url.Action("Detail",new { id= item.PurchaseId})'" title="Ver detalle y editar">
                        <span class="fa fa-edit"></span>
                        Editar
                    </button>
                </td>
            </tr>
        }
    </tbody>
</table>

@{

    var totalAmount = Model.Where(p=> p.Status != TranStatus.Canceled && p.Status != TranStatus.InProcess).Sum(purchase => purchase.FinalAmount);
    var debst = 0.0;

    foreach(var purchase in Model.Where(p => p.Status != TranStatus.Canceled && p.Status != TranStatus.InProcess))
    {
        debst += purchase.FinalAmount - purchase.PurchasePayments.Sum(a => a.Amount);
    }
}
<script>
    $(document).ready(function ()
    {
      
        $("#tbPurchases").removeClass("hidden");

        var printPurchasesOp = { Title: '@Html.Raw(Extension.GetTitle("Historial de Compras"))', Columns: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] };

        Paginate("#tbPurchases", 10, true, null, false, "#tbButtonsPurchases", printPurchasesOp);

        var tAmount = "Total " + GetCurrency(parseFloat('@totalAmount'));

        var tDebst = "Por Pagar " + GetCurrency(parseFloat('@debst'));
        $("#Total").text(tAmount);
        $("#Debts").text(tDebst);

        HideLoading();
    });



</script> 