@model ICollection<CerberusMultiBranch.Models.Entities.Operative.Purchase>

<table id="tbPurchases" class="table table-striped small text-uppercase">
    <thead>
        <tr hidden>
            <th ></th>
            <th ></th>
            <th ></th>
            <th ></th>
            <th class="col-xs-1"></th>
            <th class="col-xs-1"></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    <label>Sucursal </label> <br /> @Html.DisplayFor(m => item.Branch.Name)<br />
                    <label>Agente  </label> <br /> @Html.DisplayFor(m => item.User.UserName)
                </td>
                <td>
                    
                    <label>Factura  </label>   <br /> @Html.DisplayFor(m => item.Bill)<br />
                    <label>Proveedor</label>  <br />@Html.DisplayFor(m => item.Provider.Name)<br />
                </td>
             
                <td>
                    <label>Fecha Compra</label><br /> @item.TransactionDate.ToString("dd/MM/yyyy")<br />
                    <label>Fecha Expira</label> <br />@item.Expiration.ToString("dd/MM/yyyy")
                </td>
           
                <td>
                    <label>Total sin descuento</label><br /> @Html.DisplayFor(m => item.TotalTaxedAmount)<br />
                    <label>Total con descuento</label><br /> @item.FinalAmount.ToString("c") |  @item.DiscountPercentage %
                </td>

                <td class="input-group col-xs-1" >
                    @switch (item.TransactionType)
                    {
                        case CerberusMultiBranch.Models.Entities.Operative.TransactionType.Contado:
                            <div class="form-control alert-success">
                                @item.TransactionType.ToString()
                            </div>
                            break;
                        case CerberusMultiBranch.Models.Entities.Operative.TransactionType.Credito:
                            <div class="form-control alert-danger">
                                @item.TransactionType.ToString()
                            </div>
                            break;
                    }
                    @switch (item.Status)
                    {
                        case CerberusMultiBranch.Models.Entities.Operative.TranStatus.InProcess:
                            <div class="form-control alert-warning">
                               Procesando
                            </div>
                            break;
                        case CerberusMultiBranch.Models.Entities.Operative.TranStatus.Reserved:
                            <div class="form-control alert-info">
                                Inventariado
                            </div>
                            break;
                      
                        case CerberusMultiBranch.Models.Entities.Operative.TranStatus.Compleated:
                            <div class="form-control alert-success">
                                Pagado
                            </div>
                            break;
                        case CerberusMultiBranch.Models.Entities.Operative.TranStatus.Canceled:
                            <div class="form-control alert-danger">
                                Cancelado
                            </div>
                            break;
                    }
                </td>
                <td class="col-xs-1">
                    <button class="btn btn-primary" 
                            onclick="window.location = '@Url.Action("Detail",new { id= item.PurchaseId})'" title="Ver detalle y editar">
                        <span class="fa fa-edit" />
                    </button>
                </td>
            </tr>
        }
    </tbody>
</table>

@{

    var totalAmount = Model.Sum(purchase => purchase.FinalAmount);
    var debst = 0.0;

    foreach(var purchase in Model)
    {
        debst += purchase.FinalAmount - purchase.PurchasePayments.Sum(a => a.Amount);
    }
}
<script>
    $(document).ready(function () {
        Paginate("#tbPurchases", 8);

        var tAmount = "Total " + GetCurrency(parseFloat('@totalAmount'));

        var tDebst = "Por Pagar " + GetCurrency(parseFloat('@debst'));
        $("#Total").text(tAmount);
        $("#Debts").text(tDebst);
    });



</script> 