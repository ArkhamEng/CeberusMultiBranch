@model IEnumerable<RequiredProductGroupViewModel>

@using CerberusMultiBranch.Support
@using CerberusMultiBranch.Models.ViewModels.Purchasing





<table id="tbProductQuickSearch" class=" hidden" style="width:100%">
    <thead>
        <tr><td class="hidden"></td></tr>
    </thead>
    <tbody>
        @foreach (var group in Model)
        {
            <tr>
                <td class="panel-group">
                    @Html.Partial("_RequiredProductSearchGroup",group)
                </td>
            </tr>
        }
    </tbody>
</table>

<script>
    $(document).ready(function ()
    {
        $("#tbProductQuickSearch").removeClass("hidden");
        //GroupRow("#tbProductQuickSearch", 10, "#FProductName", 0, 6)

        Paginate("#tbProductQuickSearch", 5, false, "#FProductName");
    });


    function ProductSelected(btn) {
        var row = $(btn).parent().parent()[0];
        var txt = $(row).find("#item_AddQuantity");

        var toAdd = $(txt).val();
        var productId = $(row).find("#item_ProductId").val();

        var branchId = $(row).find("#item_BranchId").val();
        var code = $(row).find("#item_ProviderCode").val();
        var price = parseFloat($(row).find("#item_BuyPrice").val());

        if (code == 'No asignado')
        {
            ShowNotify("Sin código de proveedor", "warning", "Este producto no tiene relación con el proveedor seleccionado", 3000);
            return;
        }


        var param =
           {
               BranchId: branchId,
               ProviderId: $("#ProviderId").val(),
               ProductId: productId,
               Quantity: toAdd,
               PurchaseTypeId: $("#PurchaseType").val(),
               Price: price,
               Comment: $("#Comment").val(),
               DaysToPay: $("#DaysToPay").val()
           };

        ShowModLoading();

        ExecuteAjax('@Url.Action("AddToEstimation", "Purchases")', { item: param }, function (response) {
            HideModLoading(function () {
                $(btn).attr('disabled', true);
                $(txt).attr('disabled', true);
                $(row).addClass('bgDataTable-info');
                ShowNotify("Partida agregada", "info", "Partida agregada a la estimación de compra", 3000);
                $("#divPurchaseDetails").html(response);
            });
        });
    }

    //evalua la cantidad de produto ingresado (no puede superar al maximo configurado)
    function CheckQuantity(input) {
        var row = $(input).parent().parent()[0];


        var stock = parseFloat($(row).find("#item_Quantity").val());
        var max = parseFloat($(row).find("#item_MaxQuantity").val());

        var quantity = $(input).val();

        if (isNaN(quantity) || quantity == '')
            $(input).val(max - stock);


        quantity = parseFloat(quantity);

        var total = stock + quantity;


        if (total > max || quantity <= 0)
            $(input).val(max - stock);

    }

    //llama la ventana código proveedor
    function BeginProviderCode(productId) {
        ShowModLoading();

        ExecuteAjax('@Url.Action("BeginSetCode", "Purchases")', { productId: productId, providerId: $("#ProviderId").val() }, function (response) {
            HideModLoading(function () {
                ShowChildModal(response, null, 'sm');
            });
        });
    }

</script>