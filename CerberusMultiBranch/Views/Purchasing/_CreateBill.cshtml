@model CerberusMultiBranch.Models.ViewModels.Purchasing.BillingViewModel

@Scripts.Render("~/bundles/jqueryval")

@using (Html.BeginForm("CreateBill", "Purchasing", FormMethod.Post, new { id = "BillForm" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    @Html.HiddenFor(m=> m.OrderId)

    <div class="panel panel-primary">
        <div class="panel-heading">
            <button type="button" class="close" onclick="HideModal(null,true)">
                <span class="fa fa-times"></span>
            </button>
            <h4 class="panel-title">
                <span class="fa fa-file-excel-o"></span>Facturación de compra
            </h4>
        </div>
        <div class="panel-body small">
            <h4 class="text-center">
                Esta acción generara una factura que incluira solo los articulos recibidos, de las partidas cerradas o los artículos ordenados de una partida abierta<br />
                Total a facturar <strong>@Model.BillTotal.ToString("C")</strong>
            </h4>
            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.BillNumber, htmlAttributes: new { @class = "control-label" })
                <div class="input-group">
                    <span class="input-group-addon"><i class="fa fa-file-excel-o"></i></span>
                    @Html.EditorFor(model => model.BillNumber, new { htmlAttributes = new { @class = "form-control input-sm", autocomplete = "off" } })
                </div>
                @Html.ValidationMessageFor(model => model.BillNumber, "", new { @class = "text-danger" })
            </div>


            <div class="form-group col-md-12">
                @Html.LabelFor(model => model.BillComment, htmlAttributes: new { @class = "control-label" })
                <div class="input-group">
                    <span class="input-group-addon"><i class="fa fa-comment"></i></span>
                    @Html.EditorFor(model => model.BillComment, new { htmlAttributes = new { @class = "form-control input-sm", autocomplete = "off" } })
                </div>
                @Html.ValidationMessageFor(model => model.BillComment, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="panel-footer clearfix">
            <div class="pull-right">
                <button class="btn btn-sm btn-danger" type="submit">
                    <span class="fa fa-check"></span>
                    Aceptar
                </button>
                <button class="btn btn-sm btn-primary" type="button" onclick="HideModal(null,true)">
                    <span class="fa fa-times"></span>
                    Cancelar
                </button>
            </div>
        </div>
    </div>
}

<script>
    $(document).ready(function ()
    {
        var form = $("#BillForm");
        form.validate();

        SetSubmitEvent();
    });

    function SetSubmitEvent()
    {
        $("#BillForm").off('submit').on('submit', function (e)
        {
            e.preventDefault();
            e.stopImmediatePropagation();

            var $form = $(e.target),
            formData = new FormData(),
            params = $form.serializeArray(),
            files = [];

            if (!$form.valid())
                return;

            $.each(params, function (i, val)
            {
                formData.append(val.name, val.value);
            });

            ShowModLoading();

            SubmitAjax($form.attr('action'), formData, function (response)
            {
                ShowNotify(response.Header, response.Result, response.Body, 3000);
                HideModal(function () {
                    ShowLoading('Static');
                    window.location = '@Url.Action("Detail","Purchases")' + "/" + response.Id;
                });

            });

        });
    }
</script>