@model IEnumerable<CerberusMultiBranch.Models.Entities.Purchasing.PurchaseOrderDetail>
@using CerberusMultiBranch.Support
@using CerberusMultiBranch.Models.Entities.Purchasing



<table id="tbPurchaseDetails" class="table small">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Product.Code)
            </th>

            <th>
                @Html.DisplayNameFor(model => model.Product.Name)
            </th>
            <th class="text-center">
                @Html.DisplayName("Costo")
            </th>
            <th class="text-center">
                @Html.DisplayNameFor(model => model.Discount)
            </th>
            <th class="text-center">
                @Html.DisplayNameFor(model => model.OrderQty)
            </th>
            <th class="text-center">
                @Html.DisplayNameFor(model => model.ReceivedQty)
            </th>
            <th class="text-center">
                @Html.DisplayNameFor(model => model.ComplementQty)
            </th>
            <th class="text-center">
                @Html.DisplayNameFor(model => model.StockedQty)
            </th>
            <th class="text-center">
                @Html.DisplayNameFor(model => model.LineTotal)
            </th>
            <th>
                @if (Model.FirstOrDefault(d => d.IsStored).PurchaseOrder.PurchaseStatusId == PStatus.Watting)
                {
                    <button class="btn btn-sm btn-default" data-toggle="tooltip" title="Agrega partida a la orden" onclick="OpenSearchProducts()">
                        <span class="fa fa-plus"></span>
                    </button>
                }
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            var cls = Model.First().PurchaseOrder.DeliveryDate != null ? (item.IsCompleated ? "alert alert-success" : "alert alert-attention") : "";
            <tr class="@cls">
                <td>
                    @Html.HiddenFor(modelItem => item.PurchaseOrderDetailId)
                    @Html.DisplayFor(modelItem => item.Product.Code) <br />
                    @Html.DisplayFor(modelItem => item.ProviderCode)
                    @Html.HiddenFor(modelItem => item.LineTotal)

                </td>
                <td>
                    @Html.DisplayUpperFor(modelItem => item.Product.Name) <br />
                    <strong>Por</strong>  @Html.DisplayUpperFor(modelItem => item.Product.TradeMark) 
                    <strong>Unidad</strong> @Html.DisplayUpperFor(modelItem => item.Product.Unit)
                </td>

                <td id="tdUnitPrice" class="text-right">
                    @Html.DisplayFor(modelItem => item.UnitPrice)

                </td>
                <td id="tdDiscountLine" class="text-center">
                    @Html.DisplayFor(modelItem => item.Discount) %
                </td>
                <td class="text-center">
                    @Html.DisplayFor(modelItem => item.OrderQty)
                </td>

                <td id="tdReceivedQty" class="text-center">
                    @Html.DisplayFor(modelItem => item.ReceivedQty)
                </td>
                <td id="tdRejectedQty" class="text-center">
                    @Html.DisplayFor(modelItem => item.ComplementQty)
                </td>
                <td id="tdStockedQty" class="text-center">
                    @Html.DisplayFor(modelItem => item.StockedQty)
                </td>
                <td id="tdLineTotal" class="text-right">
                    @Html.DisplayFor(modelItem => item.LineTotal)
                </td>
                <th>
                    @if (item.IsStored && item.PurchaseOrder.CanReceive && !item.IsCompleated)
                    {
                        <button id="btnReceiveItem" class="btn btn-primary btn-sm" type="button" onclick="ReceiveProduct('@item.PurchaseOrderDetailId')"
                                data-toggle="tooltip" title="Recibe articulos de la partida">
                            <span class="fa fa-cart-arrow-down"></span>
                        </button>
                    }
                    else if (item.IsStored && item.PurchaseOrder.CanViewDetail)
                    {
                        <button  class="btn btn-default btn-sm" type="button" onclick="ViewDetail('@item.PurchaseOrderDetailId')"
                                data-toggle="tooltip" title="Ver el detalle de la recepción">
                            <span class="fa fa-eye"></span>
                        </button>
                    }
                    else if (!item.IsStored)
                    {
                        <button class="btn btn-danger btn-sm" type="button" onclick="RemoveDetail('@item.ProductId')"
                                data-toggle="tooltip" title="quitar partida adional">
                            <span class="fa fa-trash"></span>
                        </button>
                    }

                </th>
            </tr>
        }
    </tbody>
    <tfoot>
        <tr>
            <td colspan="6" rowspan="5">
                <div class="col-md-12 form-group text-capitalize">
                    <h5>
                        @Html.Label("Observaciones", htmlAttributes: new { @class = "control-label" })<br />
                        @Model.FirstOrDefault(d => d.IsStored).PurchaseOrder.Comment.ToLower()
                    </h5>
                    <h5>
                        <strong>Por</strong> @Model.FirstOrDefault(d => d.IsStored).PurchaseOrder.UpdUser
                        @Model.FirstOrDefault(d => d.IsStored).PurchaseOrder.UpdDate.ToString("dd/MM/yyyy HH:mm")
                    </h5>
                </div>
            </td>
            <td colspan="2">
                <h5><strong>Subtotal</strong></h5>
            </td>
            <td class="text-right">
                <h5 id="tdSubTotal">@Model.Sum(d => d.LineTotal).ToMoney()</h5>
            </td>
            <td></td>
        </tr>
        <tr>
            <td colspan="2">
                <h5><strong>I.V.A</strong></h5>
            </td>
            <td class="text-right">
                <h5 id="tdTaxAmount">
                    @Model.FirstOrDefault(d => d.IsStored).PurchaseOrder.TaxAmount.ToMoney()
                </h5>
            </td>
            <td></td>
        </tr>
        <tr>

            <td colspan="2">
                <h5>
                    <strong>Envío y Seguro</strong>
                </h5>
            </td>
            <td class="text-right">
                <h5>
                    @Model.FirstOrDefault(d => d.IsStored).PurchaseOrder.Expenses
                </h5>
            </td>
            <td></td>
        </tr>
        <tr>

            <td colspan="2">
                <h5>
                    <strong>Descuento</strong>
                </h5>
            </td>
            <td class="text-right">
                <h5 id="tdTotalDue">
                    @Model.FirstOrDefault(d => d.IsStored).PurchaseOrder.DiscountAmount
                </h5>
            </td>
            <td></td>
        </tr>
        <tr>
            <td colspan="2">
                <h5>
                    <strong>Total</strong>
                </h5>
            </td>
            <td class="text-right">
                <h5 id="tdTotalDue">
                    @Model.FirstOrDefault(d => d.IsStored).PurchaseOrder.TotalDue.ToMoney()
                </h5>
            </td>
            <td></td>
        </tr>
    </tfoot>
</table>

<script>
    var ReceivedDetails = [];
    var itemsCount = parseInt('@Model.Where(m=> !m.IsCompleated).Count()');

    $(document).ready(function ()
    {
        var pendingCount = parseInt('@Model.Count(m => !m.IsStored)');
        LoadDetails(pendingCount);
    });

</script>