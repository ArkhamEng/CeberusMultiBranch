
@model CerberusMultiBranch.Models.ViewModels.Operative.ProductReceptionViewModel

<div class="panel panel-primary">
    <div class="panel-heading">
        <button class="close" type="button" onclick="HideModal(null,true)">
            <span class="fa fa-times"></span>
        </button>
        <h4 class="panel-title">
            <span class="fa fa-cubes"></span>
            Detalla de recepción
        </h4>
    </div>
    <div class="panel-body">
        <div class="panel panel-default">
            <div class="panel-body">
                <table class="table small">
                    <tr>
                        <td colspan="4">
                            <h4 class="form-group col-md-12 text-center">
                                @Model.Description <br />
                                <strong><span class="fa fa-cubes"></span></strong> @Model.MeasureUnit
                            </h4>
                        </td>
                    </tr>
                    <tr>
                        <td colspan="4">
                            <div id="divAlert" class="alert alert-attention hidden">

                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            @Html.LabelFor(m => m.RequestedQty, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.RequestedQty, new { htmlAttributes = new { @class = "form-control  input-sm", autocomplete = "off", @readonly = true } })
                        </td>
                        <td>
                            @Html.LabelFor(m => m.ReceivedQty, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.ReceivedQty, new { htmlAttributes = new { @class = "form-control input-sm", autocomplete = "off", @readonly = true } })
                        </td>
                        <td>
                            @Html.LabelFor(m => m.ComplementQty, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.ComplementQty, new { htmlAttributes = new { @class = "form-control input-sm", autocomplete = "off",  @readonly = true } })
                        </td>
                        <td>
                            @Html.LabelFor(m => m.StockedQty, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.StockedQty, new { htmlAttributes = new { @class = "form-control input-sm", autocomplete = "off", @readonly = true } })
                        </td>
                    </tr>
                    <tr>
                        <td colspan="4">
                            @Html.LabelFor(m => m.Comment, htmlAttributes: new { @class = "control-label" })

                            @Html.TextAreaFor(model => model.Comment, 2, 1, htmlAttributes:
                              new { @class = "form-control text-uppercase input-sm", autocomplete = "off", @readonly=true })

                            <div class="checkbox">
                                <label class="control-label">
                                    @Html.CheckBoxFor(model => model.IsCompleated, new { htmlAttributes = new { @class = "form-control" }, @disabled = "disabled" })
                                    <strong> Recepción completa ? </strong>
                                </label>
                            </div>
                        </td>
                    </tr>
                </table>
            </div>
        </div>

        @if (Model.SerialsSaved.Count > 0)
        {
            <div class="table-responsive">
                <table class="table table-bordered small">
                    <tr>
                        <td>No Serie</td>
                        <td>Fecha Ingreso</td>
                        <td>Usuario</td>
                    </tr>

                    @foreach (var item in Model.SerialsSaved)
                {
                        <tr>
                            <td>@item.SerialNumber</td>
                            <td>@item.InsDate.ToShortDateString()</td>
                            <td>@item.InsUser</td>
                        </tr>
                    }
                </table>
            </div>
        }

    </div>
    <div class="panel-footer clearfix">
        <button class="btn btn-sm btn-danger pull-right" type="button" onclick="HideModal(null,true)">
            <span class="fa fa-times"></span>
            Cerrar
        </button>
    </div>
</div>

