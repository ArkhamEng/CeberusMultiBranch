@model CerberusMultiBranch.Models.Entities.Operative.Sale
@using CerberusMultiBranch.Models.Entities.Operative;
@using CerberusMultiBranch.Models.ViewModels.Operative;
@using CerberusMultiBranch.Support

@{
    ViewBag.Title = "Registro de venta";
    ViewBag.Class = "fa fa-shopping-bag";
}

@Scripts.Render("~/bundles/jqueryval")


@Html.AntiForgeryToken()
@Html.ValidationSummary(true, "", new { @class = "text-danger" })

@Html.HiddenFor(model => model.ClientId)
@Html.HiddenFor(model => model.SaleId)
@Html.HiddenFor(model => model.TransactionType)


<br />

<ul class="nav nav-tabs">
    <li class="active"><a data-toggle="tab" href="#tabProducts">Detalle de Venta</a></li>

    <li>
        <a data-toggle="tab" href="#tabPayments">
            Pagos <span id="TotalPayments" class="badge"></span>
        </a>
    </li>
</ul>

<div class="tab-content">
    <div id="tabProducts" class="tab-pane fade in active">
        <div class="panel panel-default">
            <div class="panel-body">
                <div class="panel panel-default">
                    <div class="panel-body">
                        <div class="row">

                            @Html.HiddenFor(model => model.FinalAmount)
                            @Html.HiddenFor(model => model.TransactionType)

                            <div class="col-md-6 form-group">
                                @Html.Label("Cliente", htmlAttributes: new { @class = "control-label small" })
                                <div class="input-group">
                                    <span class="input-group-addon"><i class="fa fa-black-tie"></i></span>
                                    <div class="form-control input-sm text-uppercase">
                                        @Model.Client.Name
                                    </div>
                                </div>
                                @Html.ValidationMessageFor(model => model.Folio, "", new { @class = "text-danger" })
                            </div>

                            <div class="col-md-5  pull-right">
                                <div class="col-md-6">
                                    @Html.Label("Fecha de Venta", htmlAttributes: new { @class = "control-label small" })
                                </div>
                                <div class="col-md-6">
                                    @Html.Label("Fecha de Expiración", htmlAttributes: new { @class = "control-label small" })
                                </div>
                                <div class="input-group">
                                    <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                                    <div class="form-control input-sm">
                                        @Model.TransactionDate.ToString("dd/MM/yyyy")
                                    </div>
                                    <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                                    <div class="form-control input-sm">
                                        @Model.Expiration.ToString("dd/MM/yyyy")
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-3 form-group">
                                @Html.LabelFor(model => model.Folio, htmlAttributes: new { @class = "control-label small" })
                                <div class="input-group">
                                    <span class="input-group-addon"><i class="fa fa-file-text-o"></i></span>
                                    <div class="form-control input-sm">
                                        @Model.Folio
                                    </div>
                                </div>
                                @Html.ValidationMessageFor(model => model.Folio, "", new { @class = "text-danger" })
                            </div>

                            <div class="col-md-3 form-group">
                                @Html.Label("Tipo de Venta", htmlAttributes: new { @class = "control-label small" })
                                <div class="input-group">
                                    <span class="input-group-addon"><i class="fa fa-shopping-basket"></i></span>
                                    <div class="form-control input-sm">
                                        @Model.TransactionType.ToString()
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-5 row pull-right">
                                <div class="col-md-6 form-group">
                                    @Html.Label("Sub-Total", htmlAttributes: new { @class = "control-label small" })
                                    <div class="input-group">
                                        <span class="input-group-addon"><i class="fa fa-dollar"></i></span>
                                        <div class="form-control input-sm" id="divTotalAmount">
                                            @Model.TotalAmount.ToMoney()
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6 form-group">
                                    @Html.Label("Total", htmlAttributes: new { @class = "control-label small" })
                                    <div class="input-group">
                                        <span class="input-group-addon"><i class="fa fa-dollar"></i></span>
                                        <div class="form-control input-sm" id="divTaxedAmount">
                                            @Model.TotalTaxedAmount.ToMoney()
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="panel-footer">
                        <button type="button" class="btn btn-primary" title="Nueva búsqueda"
                                onclick="ShowLoading('static'); window.location='@Url.Action("Report")'">
                            <span class="fa fa-backward"></span>
                            Volver
                        </button>

                        <button id="btnCompleate" type="button" class="btn btn-success Compleated" title="Terminar y Reservar?">
                            <span class="fa fa-cubes"></span>
                            Terminar
                        </button>
                        <button id="btnShowQuick" class="btn btn-warning Compleated" type="button">
                            <span class="glyphicon glyphicon-plus-sign"></span>
                            Agregar
                        </button>
                        

                        <button id="btnCancel" class="btn btn-danger pull-right" type="button" onclick="Cancel()" disabled="@Model.CancelDisabled" >
                            <span class="glyphicon glyphicon-remove"></span>
                            Cancelar
                        </button>
                    </div>
                </div>

                @*<div class="panel panel-default">*@
                    <div id="divDetails" class="dtContainer">
                        @Html.Partial("_Details", Model.SaleDetails)
                    </div>
                @*</div>*@
            </div>
        </div>
    </div>

    <div id="tabPayments" class="tab-pane">
        @*<div class="panel panel-default">*@
            <div id="divSalePayments" class="panel-body dtContainer">
                @Html.Partial("_SalePayments", Model.SalePayments)
            </div>
        @*</div>*@
    </div>
</div>



@Html.Partial("_SearchProduct")

<script>
    $(document).ready(function () {
        $("#btnShowQuick").click(function ()
        {
            $("#ModalProduct").modal('show');
        });

        $("#btnCompleate").click(function ()
        {
            ShowConfirm("Terminar y Reservar?", "Deseas concluir la venta y retirar los productos del inventario?", 'static', SubmitCompleate);
        });

        if ('@Model.Status' != '@TranStatus.InProcess' && '@Model.Status' != '@TranStatus.OnChange')
        {
            $(".Compleated").hide();
        }

    });


    function SubmitCompleate() {
        ShowLoading('static');

        ExecuteAjax('@Url.Action("CompleateManual")', { saleId: $("#SaleId").val() }, function (response) {
            HideLoading(function () {
                window.location = '@Url.Action("Detail",new { id= Model.SaleId})';
            });
        });
    }

    function Cancel()
    {
        BeginCancelSale($("#SaleId").val(), function ()
        {
            location.reload(true);
        });
    }
</script>

