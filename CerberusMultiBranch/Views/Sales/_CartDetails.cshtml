@model ICollection<CerberusMultiBranch.Models.Entities.Operative.SaleDetail>
@using CerberusMultiBranch.Support

@if (Model.Count > 0)
{
    <div style="overflow-y:auto; max-height:300px">
        <table id="tbCartDetails" class="table table-striped">
            <thead>
                <tr>
                    <th></th>
                    <th class="text-center">@Html.DisplayName("Descripción")</th>
                    <th class="text-center">@Html.DisplayName("Precio")</th>
                    <th class="text-center">@Html.DisplayName("Cantidad")</th>
                    @*<th class="text-center">@Html.DisplayName("Disponibles")</th>*@
                    <th class="text-center">@Html.DisplayName("Total")</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>

                @foreach (var item in Model)
            {
            <tr>
                <td class="col-md-1" align="center">
                    @if (item.Product.Images.Count > 0)
                        {
                        <img src="@item.Product.Images.First().Path" class="img-responsive" style="max-height:50px" />
                        }
                        else
                        {
                        <img src="~/Content/Images/sinimagen.jpg" class="img-responsive" />
                        }
                </td>
                <td>
                    <label>
                        @Html.DisplayFor(modelItem => item.Product.Code)
                    </label>
                    <br />
                    @Html.DisplayFor(modelItem => item.Product.Name)
                </td>
               
                @if (item.Product.ProductType == CerberusMultiBranch.Models.Entities.Catalog.ProductType.Single)
                    {
                    <td class="col-md-2 text-center">
                        <h5 id="txtPrice" class="text-info" onmouseover="SetPointer(this)"
                            onclick="ChangePrice(@item.ProductId,@item.SaleId)">
                            <u>
                                @Html.DisplayFor(modelItem => item.TaxedPrice)
                            </u>
                        </h5>
                    </td>
                    }
                    else
                    {
                    <td class="col-md-2 text-center">
                        <h5 id="txtPrice" class="text-info">
                            @Html.DisplayFor(modelItem => item.TaxedPrice)
                        </h5>
                    </td>
                    }
                <td class="col-md-1 text-info text-center">
                    <h5> @item.Quantity</h5>
                </td>
                <td class="text-right">
                    <h5 id="txtAmount" class="text-right">
                        @Html.DisplayFor(modelItem => item.TaxedAmount)
                    </h5>
                </td>
                <td>
                    <div class="btn-group">
                        <button class="btn btn-danger btn-xs" type="button" onclick="RemoveFromCart('@item.ProductId','@item.SaleId')"
                                title="Quitar del carritos">
                            <span class="glyphicon glyphicon-trash"></span>
                        </button>
                    </div>
                </td>
            </tr>
            }
            </tbody>
        </table>
    </div>
}
else
{
    <div class="panel-body">
        <div class="col-md-offset-2 col-md-8">
            <p>
                <h3>
                    Aun no has agregado ningun producto a la venta, Agregaga productos
                    desde el Catálogo selecciona la opcion PRODUCTOS en el menú lateral
                </h3>
            </p>
        </div>
    </div>
}

<script>
    $(document).ready(function () {

        $("#ModalCartHeader").text("Total en el carrito " + '@Model.Sum(d => d.TaxedAmount).ToMoney()');

        if (parseFloat('@Model.Count') > 0)
            $("#btnCompleate").attr("disabled", false);
        else
            $("#btnCompleate").attr("disabled", true);

    });

    function ChangePrice(prodId, transId) {
        var param = { productId: prodId, saleId: transId, isCart: true }

        ExecuteAjax('@Url.Action("OpenChangePrice")', param, function (response) {

            if ($.isPlainObject(response)) {
                ShowMessage(response.Result, response.Message, 'warning');
            }
            else
                $("#divPriceSelector").html(response);
        });
    }

    function QuantityChanged(input) {
        quantity = parseFloat($(input).val());

        var row = $(input).parent().parent();
        cells = row.find("td");

        var price = row.find("#txtPrice").text();

        var available = parseFloat(row.find("#lblAvailable").text());

        if (quantity > available)
            ShowMessage("Cantidad Invalida", "Estas Tratando de vender mas productos de los diponibles, verifica existencias!", "warning");

        price = price.replace(/[$,]+/g, "");

        //using two decimal, and regex for add comma each thousand
        var amount = "$" + (quantity * price).toFixed(2).toString().replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,");

        row.find("Amount").val(amount.replace(/[$,]+/g, ""));
        row.find("#txtAmount").text(amount);

        SetTotalAmount();
    }


    function RemoveFromCart(productId, transactionId) {
        var data = {
            transactionId: transactionId,
            productId: productId
        }

        ExecuteAjax('@Url.Action("RemoveFromCart", "Sales")', data, function (response) {
            console.log("Ejecución exitosa");
            if ($.isPlainObject(response)) {
                $("#ModalCart").modal("hide");
                ShowMessage(response.Result, response.Message, "warning");
            }
            else {
                CheckCart();
                $("#divCartDetails").html(response);
            }
        });
    }

</script>
