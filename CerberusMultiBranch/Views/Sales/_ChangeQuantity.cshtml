@model CerberusMultiBranch.Models.ViewModels.Operative.QuantityChangeViewModel


<div class="panel panel-info">
    <div class="panel-heading">
        <button type="button" class="close" onclick="HideChildModal()">&times;</button>
        <div class="modal-title">
            <span class="fa fa-cubes" style="float:left">
            </span>
            &nbsp;
            Modificar cantidad
        </div>
    </div>
    <div class="panel-body">

        @Html.HiddenFor(m => Model.cqProductId)
        <h4 class="text-center">
            Código:
            <label>@Model.cqCode</label>
        </h4>

        <div class="col-md-12">
            <div class="input-group col-md-10 col-md-offset-1">
                @Html.EditorFor(model => model.cqQuantity, new { htmlAttributes = new { @class = "form-control input-lg", type = "number", max = "999", min = "0" } })
                <span class="input-group-btn">
                    <button id="btnChangeQuantity" class="btn btn-primary btn-lg" type="button" onclick="SetQuantity()">
                        <span class="glyphicon glyphicon-ok"></span>
                        Aplicar
                    </button>
                </span>
            </div>
        </div>
        <br /><br />
        <h4 class="text-center">
            Unidad:
            <label>@Model.cqUnit</label>
        </h4>
    </div>
</div>


<script>

    function SetQuantity()
    {

        var quantity = parseFloat($("#cqQuantity").val());
        var productId = $("#cqProductId").val();

        if (isNaN(quantity) || quantity <= 0)
        {
            ShowNotify("Cantidad Incorrecta", "warning", "La cantidad no puede ser menor o igual a cero", 3000);
            return;
        }


        ExecuteAjax('@Url.Action("SetQuantity", "Sales")', { productId: productId, quantity: quantity }, function (response)
        {
           $("#divCartDetails").html(response);
           HideChildModal();
        });
    }
</script>