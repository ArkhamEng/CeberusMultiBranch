@model ICollection<CerberusMultiBranch.Models.Entities.Operative.Sale>
@using CerberusMultiBranch.Models.Entities.Operative


<table id="tbSales" class="table table-striped small">
    <thead>
        <tr>
            <th class="col-md-1 text-center">@Html.DisplayName("Sucursal")</th>
            <th class="col-md-1 text-center">@Html.DisplayName("Folio")</th>
            <th class="col-md-3 text-center">@Html.DisplayName("Cliente")</th>
            <th class="col-md-1 text-center">@Html.DisplayName("Fecha Venta")</th>
            <th class="col-md-1">@Html.DisplayName("Fecha Expira")</th>
            <th class="col-md-2 text-center">@Html.DisplayName("Usuario | Comision")</th>
            <th class="col-md-1 text-center">@Html.DisplayNameFor(m => m.First().TotalAmount)</th>
            <th class="col-md-1 text-center">@Html.DisplayName("Status")</th>
            <th class="col-md-1 text-right" />
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td class="text-uppercase">@Html.DisplayFor(m => item.Branch.Name)</td>
                <td>@Html.DisplayFor(m => item.Folio)</td>
                <td class="text-uppercase">@Html.DisplayFor(m => item.Client.Name)</td>
                <td >@item.TransactionDate.ToString("dd/MM/yyyy")</td>
                <td >@item.Expiration.ToString("dd/MM/yyyy")</td>
                
                <td class="text-uppercase">@Html.DisplayFor(m => item.User.UserName)<br />
                @item.ComAmount.ToString("c")
                </td>

                <td align="center">@Html.DisplayFor(m => item.TotalAmount)</td>
               
                <td class="input-group text-uppercase">
                    @switch (item.TransactionType)
                    {
                        case CerberusMultiBranch.Models.Entities.Operative.TransactionType.Contado:
                            <div class="form-control alert-success">
                                @item.TransactionType.ToString()
                            </div>
                            break;
                        case CerberusMultiBranch.Models.Entities.Operative.TransactionType.Credito:
                            <div class="form-control alert-danger">
                                @item.TransactionType.ToString()
                            </div>
                            break;
                    }
                    @switch (item.Status)
                    {
                        case CerberusMultiBranch.Models.Entities.Operative.TranStatus.InProcess:
                            <div class="form-control alert-warning">
                                Procesando
                            </div>
                            break;
                        case CerberusMultiBranch.Models.Entities.Operative.TranStatus.Reserved:
                            <div class="form-control alert-info">
                                Reservado
                            </div>
                            break;

                        case CerberusMultiBranch.Models.Entities.Operative.TranStatus.Compleated:
                            <div class="form-control alert-success">
                                Pagado
                            </div>
                            break;
                        case CerberusMultiBranch.Models.Entities.Operative.TranStatus.Canceled:
                            <div class="form-control alert-danger">
                                Cancelado
                            </div>
                            break;
                    }
                </td>

                <td align="center">
                    <button class="btn btn-primary" title="Ver detalle y editar"
                            onclick="ShowLoading(); window.location = '@Url.Action("Detail", new { id = item.SaleId })'">
                        <span class="fa fa-edit" />
                    </button>
                </td>
            </tr>
           }
    </tbody>
    @{
        var totalCommision = Model.Sum(sale => sale.ComAmount);
        var totalAmount = Model.Sum(sale => sale.TotalAmount);
    }
   
</table>


<script>
    $(document).ready(function () {
        SetDataTable("#tbSales", "#txtFilter");

        var tAmount = "Ventas: " + GetCurrency(parseFloat('@totalAmount'));

        var tComission = "Comisiones: " + GetCurrency(parseFloat('@totalCommision'));

        $("#hCommision").text(tComission);
        $("#hTotal").text(tAmount);
    });


</script> 