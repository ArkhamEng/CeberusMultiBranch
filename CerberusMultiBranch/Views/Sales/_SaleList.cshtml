@model IEnumerable<CerberusMultiBranch.Models.Entities.Operative.Sale>
@using CerberusMultiBranch.Models.Entities.Operative
@using CerberusMultiBranch.Support

<table id="tbSales" class="table dt-responsive nowrap table-bordered small hidden" style="width:100%">
    <thead>
        <tr>
            <td>
                @Html.DisplayNameFor(model => model.Status)
            </td>
            <td>
                @Html.DisplayName("Tipo")
            </td>
            <th>
                @Html.DisplayNameFor(model => model.Folio)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Client.Name)
            </th>
            <th>
                @Html.DisplayName("Agente")
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TransactionDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Expiration)
            </th>
            <td>
                @Html.DisplayNameFor(model => model.TotalTaxedAmount)
            </td>
            <th>
                @Html.DisplayName("Abonos")
            </th>
            <th>
                @Html.DisplayName("Deuda")
            </th>
            <td>
                @Html.DisplayNameFor(model => model.ComPer)
            </td>
            <td>
                @Html.DisplayNameFor(model => model.ComAmount)
            </td>
            <td>
                @Html.DisplayNameFor(model => model.SendingType)
            </td>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td class="@item.StatusStyle">
                    @Html.DisplayFor(m => item.SaleStatus)
                </td>
                <td>
                    @Html.DisplayFor(m => item.TransactionType)
                </td>

                <td>
                    @Html.DisplayUpperFor(m => item.Folio)
                </td>
                <td>
                    @Html.DisplayUpperFor(m => item.Client.Name)
                </td>
                <td>
                    @Html.DisplayUpperFor(m => item.User.UserName)
                </td>
                <td>
                    @Html.DisplayFor(m => item.TransactionDate)
                </td>
                <td>
                    @Html.DisplayFor(m => item.Expiration)
                </td>
                <td>
                    @Html.DisplayFor(m => item.TotalTaxedAmount)
                </td>
                <td>
                    @item.SalePayments.Sum(p => p.Amount).ToMoney()
                </td>

                <td>
                    @{ var debt = item.TotalTaxedAmount - item.SalePayments.Sum(p => p.Amount); }
                    @debt.ToMoney()
                </td>
                <td>
                    @Html.DisplayFor(m => item.ComPer) %
                </td>
                <td>
                  @item.ComAmount.ToMoney()
                </td>
                <td>
                    @Html.DisplayFor(m => item.Delivery)
                </td>
                <td>
                    <button class="btn btn-warning btn-sm" title="Editar Venta"
                            onclick="ShowLoading(); window.location = '@Url.Action("Detail", new { id = item.SaleId })'">
                        <span class="fa fa-edit"></span>Editar
                    </button>
                </td>
            </tr>
                        }
    </tbody>
    @{
        var totalCommision = Model.Where(sale=> sale.Status == TranStatus.Compleated).Sum(sale => sale.ComAmount);
        var totalAmount = Model.Sum(sale => sale.TotalTaxedAmount);
        var payed = Model.Sum(sale => sale.SalePayments.Sum(s => s.Amount));
    }

</table>


<script>
    $(document).ready(function ()
    {
        $("#tbSales").removeClass("hidden");

        var printSalesOp = { Title: '@Html.Raw(Extension.GetTitle("Historial de Ventas"))', Columns: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] };

        Paginate("#tbSales", 10, true, "#txtFilter", false, "#tbButtonsSales", printSalesOp);

        var tAmount = "Total Vendido: " + GetCurrency(parseFloat('@totalAmount'));

        var tComission = "Comisiones Efectivas: " + GetCurrency(parseFloat('@totalCommision'));


        var tPayments = "Total Cobrado: " + GetCurrency(parseFloat('@payed'));

        $("#hCommision").text(tComission);
        $("#hTotal").text(tAmount);
        $("#hPayed").text(tPayments);
    });


</script> 