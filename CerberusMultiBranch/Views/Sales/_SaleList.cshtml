@model IEnumerable<Sale>
@using CerberusMultiBranch.Models.Entities.Operative
@using CerberusMultiBranch.Support

<table id="tbSales" class="table table-hover  table-bordered small hidden" style="width:100%">
    <thead>
        <tr>
            <th >
                @Html.DisplayName("Tipo")
            </th>

            <th >
                @Html.DisplayName("Folio")
            </th>
            <th >
                @Html.DisplayName("Cliente")
            </th>
            <th>
                @Html.DisplayName("Agente")
            </th>
            <th>
                @Html.DisplayName("Fecha")
            </th>
            <th >
                @Html.DisplayName("Crédito")
            </th>

            <th>
                @Html.DisplayName("Total")
            </th>
            <th>
                @Html.DisplayName("Abonos")
            </th>   
            <th>
                @Html.DisplayName("Adeudo")
            </th>              
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr onclick="ShowLoading(); window.location = '@Url.Action("SaleOrder","Selling", new { id = item.SaleId })'" onmouseover="SetPointer(this)">
                <td class="@item.Status.GetAlert()">
                    @item.TransactionType.GetName() <br />
                    @item.Status.GetName()
                </td>
                <td>
                    @Html.DisplayUpperFor(m => item.Folio) <br />
                    @Html.DisplayUpperFor(m => item.Branch.Name)
                </td>

                <td style="min-width:200px">
                    @Html.DisplayUpperFor(m => item.Client.Name)
                </td>
                <td>
                    @Html.DisplayUpperFor(m => item.User.UserName)
                </td>
                <td>
                    @item.TransactionDate.ToString("dd/MM/yyyy")
                </td>
                <td>
                    <strong>
                        @Html.DisplayFor(m => item.Days)
                    </strong>
                </td>
                <td class="text-right">
                    @Html.DisplayFor(m => item.TotalTaxedAmount)
                </td>
                <td class="text-right">
                    @item.SalePayments.Sum(p => p.Amount).ToMoney() <br />
                </td>
                <td class="text-right">
                    @{ var debt = item.TotalTaxedAmount - item.SalePayments.Sum(p => p.Amount); }
                    @debt.ToMoney()
                </td>
                
            </tr>
         }
    </tbody>
    @{
        var totalCommision = Model.Where(sale => sale.Status == TranStatus.Compleated).Sum(sale => sale.ComAmount);
        var totalAmount = Model.Where(sale => sale.Status != TranStatus.Canceled && sale.Status != TranStatus.PreCancel).Sum(sale => sale.TotalTaxedAmount);
        var payed = Model.Where(sale => sale.Status != TranStatus.Canceled && sale.Status != TranStatus.PreCancel).Sum(sale => sale.SalePayments.Sum(s => s.Amount));
    }

</table>


<script>
    $(document).ready(function ()
    {
        $("#tbSales").removeClass("hidden");

        var printSalesOp = { Title: '@Html.Raw(Extension.GetTitle("Historial de Ventas"))', Columns: [0, 1, 2, 3, 4, 5, 6, 7] };

        Paginate("#tbSales", 10, true, null, false, "#tbButtonsSales", printSalesOp);

        var tAmount = "Total Vendido: " + GetCurrency(parseFloat('@totalAmount'));

        var tComission = "Comisiones Efectivas: " + GetCurrency(parseFloat('@totalCommision'));


        var tPayments = "Total Cobrado: " + GetCurrency(parseFloat('@payed'));

        $("#hCommision").text(tComission);
        $("#hTotal").text(tAmount);
        $("#hPayed").text(tPayments);
    });


</script> 